<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TomShane.Neoforce.Controls</name>
    </assembly>
    <members>
        <member name="T:TomShane.Neoforce.Controls.Application">
            <summary>
            Base class for your Neoforce application. Use it.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.graphics">
            <summary>
            Graphics device manager for the application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.manager">
            <summary>
            GUI control manager for the application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.sprite">
            <summary>
            Sprite batch object for the application. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.clearBackground">
            <summary>
            Indicates if the background should be cleared to the BG color by the application. ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.backgroundColor">
            <summary>
            Application background color.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.backgroundImage">
            <summary>
            Image to use as the application background.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.mainWindow">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.appWindow">
            <summary>
            Indicates if the application should create and use the MainWindow. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.mousePos">
            <summary>
            Current position of the mouse cursor.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.systemBorder">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.fullScreenBorder">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.exitConfirmation">
            <summary>
            Indicates whether the exit confirmation dialog should be shown before
            closing the application. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.exitMessage">
            <summary>
            Message to display on exit confirmation, leave as "" for default
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.exit">
            <summary>
            Indicates whether a request to terminate the application has been received.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.exitDialog">
            <summary>
            Exit confirmation dialog object.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.mouseDown">
            <summary>
            Tracks the mouse button state when running on Windows.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Application.BackgroundImageColor">
            <summary>
            Color to use as the applications background image color
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.#ctor">
            <summary>
            Creates an application using the "Default" skin and not using the Main Window.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.#ctor(System.String)">
            <summary>
            Creates an application using the specified skin and not using the Main Window.
            </summary>
            <param name="skin">Name of the skin to load.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.#ctor(System.Boolean)">
            <summary>
            Creates an application using the "Default" skin and using the Main Window.
            </summary>
            <param name="appWindow">Indicates if the application should create its MainWindow member.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.#ctor(System.String,System.Boolean)">
            <summary>
            Creates an application using the specified skin and using the Main Window.
            </summary>
            <param name="skin">Name of the skin to load.</param>
            <param name="appWindow">Indicates if the application should create its MainWindow member.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the GUI manager and the SpriteBatch objects.
            </summary>
            <param name="disposing">Indicates if the resources should be released from memory.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Initialize">
            <summary>
            Initializes the application.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            
            
            Updates the application.
            </summary>
            <param name="gameTime">Snapshot of the game's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the application.
            </summary>
            <param name="gameTime">Snapshot of the game's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.CreateMainWindow">
            <summary>
            Creates the application's Main Window.
            </summary>
            <returns>A new Window instance.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.InitMainWindow">
            <summary>
            Initializes the application's Main Window and passes it off the the GUI Manager.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.MainWindow_Draw(System.Object,TomShane.Neoforce.Controls.DrawEventArgs)">
            <summary>
            Raises the application's draw event.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Exit">
            <summary>
            Sets the exit flag and begins shutting down the application.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Manager_WindowClosing(System.Object,TomShane.Neoforce.Controls.WindowClosingEventArgs)">
            <summary>
            Handles the Window Closing event. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.closeDialog_Closed(System.Object,TomShane.Neoforce.Controls.WindowClosedEventArgs)">
            <summary>
            Handles the Dialog Closed event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.MainWindow_Closing(System.Object,TomShane.Neoforce.Controls.WindowClosingEventArgs)">
            <summary>
            Handles the main window's closing event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Graphics_DeviceReset(System.Object,System.EventArgs)">
            <summary>
            Handles the graphics device reset event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.CreateRenderTarget">
            <summary>
            Creates a 2D texture that can be used as a render target.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.DrawScene(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Additional drawing logic for your application can be placed here.
            </summary>
            <param name="gameTime">Snapshot of the game's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Run">
            <summary>
            Runs the application.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Input_MouseMove(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events on Windows.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Input_MouseDown(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events on Windows.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.Input_MouseUp(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles the mouse button up events on Windows.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Application.CheckPos(Microsoft.Xna.Framework.Point)">
            <summary>
            Determines whether the mouse cursor is over the application Main Window (true) or
            if the mouse cursor is outside of the window or hovering a window control. (false)
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.Graphics">
            <summary>
            Gets or sets the graphics device manager for the application.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.Manager">
            <summary>
            Gets or sets the GUI manager for the application. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.ClearBackground">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.BackgroundColor">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.BackgroundImage">
            <summary>
            Image to use as the application background.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.MainWindow">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.SystemBorder">
            <summary>
            Indicates whether the system border should be drawn ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.FullScreenBorder">
            <summary>
            Indicates whether the window border should be drawn in full screen mode. ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.ExitConfirmation">
            <summary>
            Indicates if the default exit confirmation dialog will be 
            shown when the application is about to close.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Application.ExitMessage">
            <summary>
            Message to display on exit confirmation, leave as "" for default
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Banner">
            <summary>
            Represents a Banner control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Button">
            <summary>
            Represents a button control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ButtonBase">
            <summary>
            Base class for a button control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Control">
            <summary>
            Defines the base class for all controls.
            </summary>    
        </member>
        <member name="T:TomShane.Neoforce.Controls.Component">
            <summary>
            ???
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Disposable">
            <summary>
            Represents a reference counted resource.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Disposable.count">
            <summary>
            Number of references to this object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Disposable.#ctor">
            <summary>
            Creates a reference counted object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Disposable.Finalize">
            <summary>
            Releases resources used by the object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Disposable.Dispose">
            <summary>
            Cleans up after the disposable object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Disposable.Dispose(System.Boolean)">
            <summary>
            Decreases the object's reference count.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Disposable.Count">
            <summary>
            Gets the number of active references this object has in memory.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Component.manager">
            <summary>
            GUI manager for the component.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Component.initialized">
            <summary>
            Indicates if the component has been initialized or not.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Component.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new Component.
            </summary>
            <param name="manager">GUI manager for the component.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Component.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the component.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Component.Init">
            <summary>
            Initializes the component.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Component.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the component.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Component.Manager">
            <summary>
            Gets the GUI manager for the component.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Component.Initialized">
            <summary>
            Indicates if the component has been initialized or not.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.UndefinedColor">
            <summary>
            Default color used when a color is not defined.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.Stack">
            <summary>
            An internal list of all controls in memory managed by the GUI manager.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.cursor">
            <summary>
            Cursor displayed when the mouse is over the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.color">
            <summary>
            Color of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.textColor">
            <summary>
            Color of the control's text.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.backColor">
            <summary>
            Color of the control's background.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.alpha">
            <summary>
            Transparency of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.Hoveralpha">
            <summary>
            Transparency of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.anchor">
            <summary>
            Control's anchor values that define which edge of a container a control is 
            bound and how the control is resized in relation to its parent control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.resizeEdge">
            <summary>
            Indicates which edge of the control will show the resize cursor and support resizing.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.text">
            <summary>
            Text of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.visible">
            <summary>
            Indicates if the control is visible or not.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.enabled">
            <summary>
            Indicates if the control is enabled or not.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.skin">
            <summary>
            Skin used for rendering the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.parent">
            <summary>
            Control's parent control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.root">
            <summary>
            Root container control. ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.left">
            <summary>
            X position of the control as an offset from the left edge of its parent control
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.top">
            <summary>
            Y position of the control as an offset from the top edge of its parent control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.width">
            <summary>
            Width of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.height">
            <summary>
            Height of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.suspended">
            <summary>
            Indicates if the control should receive any events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.contextMenu">
            <summary>
            Context menu for this control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.tooltipTimer">
            <summary>
            Tracks elapsed time for delaying the display of the control's tool tip. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.hoverTimer">
            <summary>
            Tracks elapsed time for delaying the display of the control's tool tip. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.doubleClickTimer">
            <summary>
            Tracks the time of the last doubleClickButton click to help detect double click events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.doubleClickButton">
            <summary>
            Specifies which mouse button should be detected for double click events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.toolTipType">
            <summary>
            Type argument for the tool tip.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.toolTip">
            <summary>
            Tool tip for the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.doubleClicks">
            <summary>
            Indicates if the control can receive double clicks.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.outlineResizing">
            <summary>
            Indicates if the control should use outline resizing.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.outlineMoving">
            <summary>
            Indicates if the control should use outline moving.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.name">
            <summary>
            Name of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.tag">
            <summary>
            Custom user-defined data associated with the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.gamePadActions">
            <summary>
            Gamepad button to control action mappings.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.designMode">
            <summary>
            Indicates if the control is in design mode.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.partialOutline">
            <summary>
            Indicates if the control outline is only displayed for certain edges.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.drawingRect">
            <summary>
            Defines the area where the control should be drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.controls">
            <summary>
            List of child controls belonging to the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.movableArea">
            <summary>
            Defines the region of the control where the mouse can click to start a move operation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.passive">
            <summary>
            Indicates if the control can receive user input events or not.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.detached">
            <summary>
            Indicates if the control is rendered off the parents texture.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.movable">
            <summary>
            Indicates if the control can be moved by a drag operation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.resizable">
            <summary>
            Indicates if the control can be resized by a drag operation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.invalidated">
            <summary>
            Indicates if the control needs to be redrawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.canFocus">
            <summary>
            Indicates if the control can receive input focus or not.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.resizerSize">
            <summary>
            The size of the borders around the control used for resizing by the mouse.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.minimumWidth">
            <summary>
            Minimum width of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.maximumWidth">
            <summary>
            Maximum width of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.minimumHeight">
            <summary>
            Minimum height of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.maximumHeight">
            <summary>
            Maximum height of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.topModifier">
            <summary>
            Y position offset to apply to the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.leftModifier">
            <summary>
            X position offset to apply to the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.virtualHeight">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.virtualWidth">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.stayOnBack">
            <summary>
            Indicates if the control should stay under other controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.stayOnTop">
            <summary>
            Indicates if the control should stay on top of other controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.target">
            <summary>
            Texture the control pre-draws to before being rendered on screen.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.pressSpot">
            <summary>
            Indicates where the mouse cursor is pressing on the control. Used to help 
            detect move and resize events on the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.pressDiff">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.resizeArea">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.hovered">
            <summary>
            Indicates if the mouse cursor is hovering the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.inside">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.pressed">
            <summary>
            Tracks the pressed state of various input buttons.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.isMoving">
            <summary>
            Indicates if the control is currently involved in a move event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.isResizing">
            <summary>
            Indicates if the control is currently involved in a resizing event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.margins">
            <summary>
            Margins between this control and another control. Usable with the StackPanel control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.anchorMargins">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.clientMargins">
            <summary>
            Margins defining how much offset to define the client area of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.outlineRect">
            <summary>
            Rectangle drawn when the control is being resized to indicate the new size of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.scrollWheel">
            <summary>
            Tracks the position of the mouse scroll wheel
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.drawFormattedText">
            <summary>
            Indicates if text that has color ([color:Color][/color] are renderered
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new Control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Clone">
            <summary>
            Create a copy of the control
            </summary>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the control and removes itself from parent and manager control lists.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GetVirtualHeight">
            <summary>
            Gets the virtual height of the control. (Total scrollable height of the client area, not just the region being displayed.)
            </summary>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GetVirtualWidth">
            <summary>
            Gets the virtual width of the control. (Total scrollable width of the client area, not just the region being displayed.)
            </summary>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GetClippingRect(TomShane.Neoforce.Controls.Control)">
            <summary>
            Gets the controls clipping region.
            </summary>
            <param name="c">Control to get the clip rectangle of.</param>
            <returns>Returns the specified control's clip rectangle.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CreateRenderTarget(System.Int32,System.Int32)">
            <summary>
            Creates the render target for the control.
            </summary>
            <param name="width">Width of the render target.</param>
            <param name="height">Height of the render target.</param>
            <returns>Returns the render target of the specified dimensions.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.PrepareTexture(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the control on the render target.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckDetached(TomShane.Neoforce.Controls.Control)">
            <summary>
            Determines if the control is detached.
            </summary>
            <param name="c">Control to check.</param>
            <returns>Returns true if the control or one of its parent controls are detached; false otherwise.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.DrawChildControls(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.GameTime,System.Boolean)">
            <summary>
            Draws the child controls on the render target.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
            <param name="firstDetachedLevel"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.DrawControls(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime,System.Boolean)">
            <summary>
            
            </summary>
            <param name="renderer"></param>
            <param name="rect"></param>
            <param name="gameTime"></param>
            <param name="firstDetach"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.DrawDetached(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <param name="renderer"></param>
            <param name="gameTime"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Render(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)">
            <summary>
            
            </summary>
            <param name="renderer"></param>
            <param name="gameTime"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.DrawOutline(TomShane.Neoforce.Controls.Renderer,System.Boolean)">
            <summary>
            
            </summary>
            <param name="renderer"></param>
            <param name="child"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SetPosition(System.Int32,System.Int32)">
            <summary>
            Sets the position of the control to the specified values.
            </summary>
            <param name="left">X position of the control.</param>
            <param name="top">Y position of the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the control to the specified dimensions.
            </summary>
            <param name="width">Width of the control.</param>
            <param name="height">Height of the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SetAnchorMargins">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.ProcessAnchor(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Init">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.InitSkin">
            <summary>
            Initializes the control's skin.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SetDefaultSize(System.Int32,System.Int32)">
            <summary>
            Sets the default size of the control.
            </summary>
            <param name="width">Default width of the control.</param>
            <param name="height">Default height of the control.</param>
            <remarks>
            This method will only use the values specified if the control's 
            skin does not have default size values set.
            </remarks>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SetMinimumSize(System.Int32,System.Int32)">
            <summary>
            Sets the minimum size of the control.
            </summary>
            <param name="minimumWidth">Minimum width of the control.</param>
            <param name="minimumHeight">Minimum height of the control.</param>
            <remarks>
            This method will only use the values specified if the control's 
            skin does not have minimum size values set.
            </remarks>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnDeviceSettingsChanged(TomShane.Neoforce.Controls.DeviceEventArgs)">
            <summary>
            Handler for when the graphics device's settings change.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Control.list">
            <summary>
            Updates the control.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckLayer(TomShane.Neoforce.Controls.SkinControl,System.String)">
            <summary>
            Makes sure the specified skin and layer are actually defined.
            </summary>
            <param name="skin">Skin to check the layers of.</param>
            <param name="layer">Layer of the skin to check the existance of.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckLayer(TomShane.Neoforce.Controls.SkinControl,System.Int32)">
            <summary>
            Makes sure the specified skin and layer are actually defined.
            </summary>
            <param name="skin">Skin to check the layers of.</param>
            <param name="layer">Index of the skin layer to check the existance of.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GetControl(System.String)">
            <summary>
            Gets a child control by name.
            </summary>
            <param name="name">Name of the control to search for.</param>
            <returns>Returns the control with the specified name or null if not found.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Add(TomShane.Neoforce.Controls.Control)">
            <summary>
            Adds the specified control as a child to this control.
            </summary>
            <param name="control">Child control to add to the list.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Remove(TomShane.Neoforce.Controls.Control,System.Boolean)">
            <summary>
            Removes the specified control from the child control list.
            </summary>
            <param name="control">Control to remove from the child control list.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Contains(TomShane.Neoforce.Controls.Control,System.Boolean)">
            <summary>
            Determines if the specified control is a child or descendant of this control.
            </summary>
            <param name="control">Control to search for in the child control collection.</param>
            <param name="recursively">Recursively check the children of children when searching.
            If false is specified, only first-level children are checked.</param>
            <returns>Returns true if the specified control is a child of this control.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Invalidate">
            <summary>
            Invalidates the control and parent controls forcing a redraw.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.BringToFront">
            <summary>
            Brings the control to the front-most Z-order.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SendToBack">
            <summary>
            Sends the control to the back of the Z-order.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Show">
            <summary>
            Makes the control visible.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Hide">
            <summary>
            Hides the control from rendering.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.Refresh">
            <summary>
            Refreshes the control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.SendMessage(TomShane.Neoforce.Controls.Message,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Sends an event message to the control. 
            </summary>
            <param name="message">Message to send to the control.</param>
            <param name="e">Event arguments for the message.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MessageProcess(TomShane.Neoforce.Controls.Message,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Processes message events for the control.
            </summary>
            <param name="message">Event message to process.</param>
            <param name="e">Event arguments for the message.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GamePadPressProcess(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Processes gamepad button press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GamePadUpProcess(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Processes gamepad button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GamePadDownProcess(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Processes gamepad button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.KeyPressProcess(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Processes key press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.KeyDownProcess(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.KeyUpProcess(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MouseDownProcess(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MouseUpProcess(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MousePressProcess(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MouseOverProcess(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse over events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MouseOutProcess(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse out events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.MouseMoveProcess(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse move events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.ClickProcess(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Processes mouse button click events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.ToolTipUpdate(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the control's tool tip.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.ToolTipOver">
            <summary>
            Updates the tool tip delay timer when the control is hovered.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.ToolTipOut">
            <summary>
            Resets the tool tip delay timer when the mouse position leaves the control boundaries.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckPosition(Microsoft.Xna.Framework.Point)">
            <summary>
            Determines if the specified point is within the bounds of the control.
            </summary>
            <param name="pos">Position to test.</param>
            <returns>Returns true if "pos" if within the bounds of the control; false otherwise.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckMovableArea(Microsoft.Xna.Framework.Point)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckResizableArea(Microsoft.Xna.Framework.Point)">
            <summary>
            
            </summary>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckWidth(System.Int32@)">
            <summary>
            
            </summary>
            <param name="w"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.CheckHeight(System.Int32@)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.PerformResize(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GetResizeCursor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.GetResizePosition(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMouseUp(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMouseMove(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMouseOver(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse over events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMouseOut(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handle mouse out events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles mouse click events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnDoubleClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles double click events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMove(TomShane.Neoforce.Controls.MoveEventArgs)">
            <summary>
            Handles move events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resize events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnValidateResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles validation of new sizes after a move event takes place.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnValidateMove(TomShane.Neoforce.Controls.MoveEventArgs)">
            <summary>
            Handles validation of new positions after a move event takes place.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMoveBegin(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when a move operation begins.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMoveEnd(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when a move operation has finished.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnResizeBegin(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler used when a resize operation has begun.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnResizeEnd(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler used when a resize operation has completed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnParentResize(System.Object,TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles changes in the parent control's size for the control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnKeyUp(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnKeyDown(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnKeyPress(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnGamePadUp(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button up events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnGamePadDown(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnGamePadPress(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handle gamepad button press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnDraw(TomShane.Neoforce.Controls.DrawEventArgs)">
            <summary>
            Handles draw events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnDrawTexture(TomShane.Neoforce.Controls.DrawEventArgs)">
            <summary>
            Handles draw texture events for the control. (Drawing to the control's render target.)
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnColorChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles color change events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnTextColorChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's text color.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnBackColorChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's background color.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnTextChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's text.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnAnchorChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's anchor points.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnSkinChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles skin changed events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnSkinChanging(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles skin changing events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnParentChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes of the control's parent.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnRootChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes of the root control of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnVisibleChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the visibility of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnEnabledChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the enabled value of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnAlphaChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the alpha value of the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnFocusLost(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles focus lost events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnFocusGained(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles focus gained events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Control.OnMousePress(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse press events for the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Cursor">
            <summary>
            Gets or sets the cursor displaying over the control.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TomShane.Neoforce.Controls.Control.DrawFormattedText" -->
        <member name="P:TomShane.Neoforce.Controls.Control.Controls">
            <summary>
            Gets a list of all child controls.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.MovableArea">
            <summary>
            Gets or sets a rectangular area that reacts on moving the control with the mouse.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.IsChild">
            <summary>
            Gets a value indicating whether this control is a child control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.IsParent">
            <summary>
            Gets a value indicating whether this control is a parent control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.IsRoot">
            <summary>
            Gets a value indicating whether this control is a root control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.CanFocus">
            <summary>
            Gets or sets a value indicating whether this control can receive focus. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Detached">
            <summary>
            Gets or sets a value indicating whether this control is rendered off the parents texture.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Passive">
            <summary>
            Gets or sets a value indicating whether this controls can receive user input events.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Movable">
            <summary>
            Gets or sets a value indicating whether this control can be moved by the mouse.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Resizable">
            <summary>
            Gets or sets a value indicating whether this control can be resized by the mouse.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ResizerSize">
            <summary>
            Gets or sets the size of the rectangular borders around the control used for resizing by the mouse.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ContextMenu">
            <summary>
            Gets or sets the ContextMenu associated with this control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.DoubleClicks">
            <summary>
            Gets or sets a value indicating whether this control should process mouse double-clicks.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OutlineResizing">
            <summary>
            Gets or sets a value indicating whether this control should use ouline resizing.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OutlineMoving">
            <summary>
            Gets or sets a value indicating whether this control should use outline moving.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Margins">
            <summary>
            Gets or sets the value indicating the distance from another control. Usable with StackPanel control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.DesignMode">
            <summary>
            Gets or sets the value indicating wheter control is in design mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.GamePadActions">
            <summary>
            Gets or sets gamepad actions for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.PartialOutline">
            <summary>
            Gets or sets the value indicating whether the control outline is displayed only for certain edges. 
            </summary>   
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.StayOnBack">
            <summary>
            Gets or sets the value indicating whether the control is allowed to be brought in the front.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.StayOnTop">
            <summary>
            Gets or sets the value indicating that the control should stay on top of other controls.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Name">
            <summary>
            Gets or sets a name of the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Focused">
            <summary>
            Gets or sets a value indicating whether this control has input focus.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ControlState">
            <summary>
            Gets a value indicating current state of the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ToolTipType">
            <summary>
            Gets or sets the type of the control's ToolTip.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ToolTip">
            <summary>
            Gets or sets the control's tool tip that will display when hovered.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.IsPressed">
            <summary>
            Indicates if the control is in the pressed state.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.TopModifier">
            <summary>
            Gets or sets the Y position offset applied to the control. (Used to
            adjust the control's position when a vertical scroll bar is present.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.LeftModifier">
            <summary>
            Gets or sets the X position offset applied to the control. (Used to 
            adjust the control's position when a horizontal scroll bar is present.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.VirtualHeight">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.VirtualWidth">
            <summary>
            ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.DrawingRect">
            <summary>
            Gets an area where is the control supposed to be drawn.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Suspended">
            <summary>
            Gets or sets a value indicating whether this control should receive any events.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Hovered">
            <summary>
            Indicates if the control is hovered by the mouse cursor.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Inside">
            <summary>
            Indicates if the mouse cursor is within the bounds of the control. ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Pressed">
            <summary>
            Tracks the pressed state of various input buttons.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.IsMoving">
            <summary>
            Gets or sets a value indicating whether this controls is currently being moved.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.IsResizing">
            <summary>
            Gets or sets a value indicating whether this controls is currently being resized.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Anchor">
            <summary>
            Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ResizeEdge">
            <summary>
            Gets or sets the edges of the contol which are allowed for resizing.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Skin">
            <summary>
            Gets or sets the skin used for rendering the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Alpha">
            <summary>
            Gets or sets the alpha value for this control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Color">
            <summary>
            Gets or sets the color for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.TextColor">
            <summary>
            Gets or sets the text color for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Visible">
            <summary>
            Gets or sets a value that indicates whether the control is rendered.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Parent">
            <summary>
            Gets or sets the parent for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Root">
            <summary>
            Gets or sets the root for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Right">
            <summary>
            Gets or sets the distance, in pixels, between the right edge of the control and the left edge of its parent.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Left">
            <summary>
            Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its parent.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Bottom">
            <summary>
            Gets or sets the distance, in pixels, between the bottom edge of the control and the top edge of its parent.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Top">
            <summary>
            Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its parent.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Width">
            <summary>
            Gets or sets the width of the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.Height">
            <summary>
            Gets or sets the height of the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.MinimumWidth">
            <summary>
            Gets or sets the minimum width in pixels the control can be sized to.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.MinimumHeight">
            <summary>
            Gets or sets the minimum height in pixels the control can be sized to.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.MaximumWidth">
            <summary>
            Gets or sets the maximum width in pixels the control can be sized to.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.MaximumHeight">
            <summary>
            Gets or sets the maximum height in pixels the control can be sized to.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.AbsoluteLeft">
            <summary>
            Gets the absolute screen X position of the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.AbsoluteTop">
            <summary>
            Gets the absolute screen Y position of the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OriginLeft">
            <summary>
            Gets the absolute screen X position of the control. (Control origin margins are factored in.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OriginTop">
            <summary>
            Gets the absolute screen Y position of the control. (Control origin margins are factored in.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OriginWidth">
            <summary>
            Gets the width of the control, including margin amounts.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OriginHeight">
            <summary>
            Gets the height of the control, including margin amounts.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ClientMargins">
            <summary>
            Gets the client (inner) margins for the control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ClientLeft">
            <summary>
            Gets the X position of the control's client area. (Relative offset from control origin.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ClientTop">
            <summary>
            Gets the Y position of the control's client area. (Relative offset from control origin.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ClientWidth">
            <summary>
            Gets or sets the width of the control's client area.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ClientHeight">
            <summary>
            Gets or sets the height of the control's client area.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.AbsoluteRect">
            <summary>
            Gets a rectangle that contains the control and its margin amounts. (Absolute X and Y positions are specified.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OriginRect">
            <summary>
            Gets a rectangle that contains the control and its margin amounts. (Relative X and Y offsets from the control origin are specified.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ClientRect">
            <summary>
            Gets a rectangle that contains the control's client area. (Relative X and Y offsets from the control origin are specified.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.ControlRect">
            <summary>
            Gets or sets the rectangle that contains the entire control and all margins. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Control.OutlineRect">
            <summary>
            Gets or sets the size of the outline rectangle drawn during a resize operation.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.DoubleClick">
            <summary>
            Occurs when the control is double clicked.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MouseDown">
            <summary>
            Occurs when the control receives a mouse button down event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MousePress">
            <summary>
            Occurs right after a MouseDown event and fires repeatedly with a delay.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MouseUp">
            <summary>
            Occurs when the control receives a mouse button up event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MouseMove">
            <summary>
            Occurs when the mouse position changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MouseOver">
            <summary>
            Occurs when the mouse cursor is hovering over the controls.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MouseOut">
            <summary>
            Occurs when the mouse cursor leaves the boundaries of the control.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MouseScroll">
            <summary>
            Occurs when the mouse scroll wheel position changes
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.KeyDown">
            <summary>
            Occurs when a key is initially pressed down.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.KeyPress">
            <summary>
            Occurs just after a KeyDown event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.KeyUp">
            <summary>
            Occurs when a key is released from the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.GamePadDown">
            <summary>
            Occurs when a gamepad button is initially pressed.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.GamePadUp">
            <summary>
            Occurs when a gamepad button is released from the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.GamePadPress">
            <summary>
            Occurs after a GamePadDown event and fires repeated press events when a button is held down.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.Move">
            <summary>
            Occurs when the control is moving.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.ValidateMove">
            <summary>
            Occurs just before a move event is finalized.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.Resize">
            <summary>
            Occurs when the control is resized.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.ValidateResize">
            <summary>
            Occurs just before a resize event is finalized.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.Draw">
            <summary>
            Occurs when the control needs to draw.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MoveBegin">
            <summary>
            Occurs at the start of a move event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.MoveEnd">
            <summary>
            Occurs at the end of a move event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.ResizeBegin">
            <summary>
            Occurs at the start of a resize event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.ResizeEnd">
            <summary>
            Occurs at the end of a resize event.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.ColorChanged">
            <summary>
            Occurs when the color of the control changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.TextColorChanged">
            <summary>
            Occurs when the color of the control's text changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.BackColorChanged">
            <summary>
            Occurs when the color of the control's background changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.TextChanged">
            <summary>
            Occurs when the text of the control changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.AnchorChanged">
            <summary>
            Occurs when the control's anchor values change.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.SkinChanging">
            <summary>
            Occurs when the control's skin is changing.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.SkinChanged">
            <summary>
            Occurs when the control's skin has changed.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.ParentChanged">
            <summary>
            Occurs when the value of the control's parent changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.RootChanged">
            <summary>
            Occurs when the value of the control's root changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.VisibleChanged">
            <summary>
            Occurs when the visibility of the control changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.EnabledChanged">
            <summary>
            Occurs when the control's enabled value changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.AlphaChanged">
            <summary>
            Occurs when the transparency of the control changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.FocusLost">
            <summary>
            Occurs when the control loses input focus.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.FocusGained">
            <summary>
            Occurs when the control gains input focus.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Control.DrawTexture">
            <summary>
            Occurs when the control needs to draw itself.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ButtonBase.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            ButtonBase constructor.
            </summary>
            <param name="manager">GUI manager for this control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ButtonBase.Init">
            <summary>
            Initializes the button base.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ButtonBase.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles button click events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ButtonBase.ControlState">
            <summary>
            Gets the state of the button control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Button.skButton">
            <summary>
            The name of the button element in the skin file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Button.lrButton">
            <summary>
            The name of the layer that a button appears on.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Button.glyph">
            <summary>
            Image to display on the button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Button.modalResult">
            <summary>
            When the button appears on a dialog, this indicates what value 
            should be returned when the button is clicked.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Button.mode">
            <summary>
            Specifies the type of button. Standard or Toggle.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Button.pushed">
            <summary>
            Indicates whether the button is currently pressed or not.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new button.
            </summary>
            <param name="manager">GUI manager for the button.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the button control.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.Init">
            <summary>
            Initializes the button control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.InitSkin">
            <summary>
            Initializes the skin for the button control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the button control.
            </summary>
            <param name="renderer">Rendering management object.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.OnGlyphChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Event handler for when the button's glyph is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Button.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Button click event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Button.Glyph">
            <summary>
            Gets or sets the button's glyph. (image)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Button.ModalResult">
            <summary>
            Gets or sets the value returned when the button of a dialog is clicked.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Button.Mode">
            <summary>
            Gets or sets the way the button operates, standard or toggle button. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Button.Pushed">
            <summary>
            Indicates whether the button is pressed or not.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Button.GlyphChanged">
            <summary>
            Occurs when the button's glyph is changed.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.LayoutXmlDocument">
            <summary>
            Represents a Neoforce Layout file.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinXmlDocument">
            <summary>
            Represents a Neoforce Skin file.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinReader">
            <summary>
            Reads a Skin document from binary format. (.xml | .skin) ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinReader.Read(Microsoft.Xna.Framework.Content.ContentReader,TomShane.Neoforce.Controls.SkinXmlDocument)">
            <summary>
            Reads a Skin file from binary format.
            </summary>
            <param name="input">Content reader used to read the skin file.</param>
            <param name="existingInstance">Existing instance to read stream data into.</param>
            <returns>Returns the loaded skin file.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.LayoutReader">
            <summary>
            Reads a Layout document from binary format.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.LayoutReader.Read(Microsoft.Xna.Framework.Content.ContentReader,TomShane.Neoforce.Controls.LayoutXmlDocument)">
            <summary>
            Reads a Layout document from the current stream.
            </summary>
            <param name="input">Content reader used to read the Layout document.</param>
            <param name="existingInstance">Existing instance to read into.</param>
            <returns>Returns the Layout document from the stream.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.CursorReader">
            <summary>
            Reads a cursor file from binary format.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CursorReader.Read(Microsoft.Xna.Framework.Content.ContentReader,System.Windows.Forms.Cursor)">
            <summary>
            Reads a cursor type from the current stream.
            </summary>
            <param name="input">Content reader used to read the cursor.</param>
            <param name="existingInstance">Existing cursor object to read into.</param>
            <returns>Returns the cursor object from the stream.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ClipControl">
            <summary>
            Represents a control with a scrollable client area that controls can be added to.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ClipControl.clientArea">
            <summary>
            Client area of the clip control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new clip control.
            </summary>
            <param name="manager">GUI manager for the clip control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.Init">
            <summary>
            Initializes the clip control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.InitSkin">
            <summary>
            Initializes the skin for the clip control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.Add(TomShane.Neoforce.Controls.Control,System.Boolean)">
            <summary>
            Adds a child control to the clip control.
            </summary>
            <param name="control">Child control to add to the clip control.</param>
            <param name="client">Indicates if the control to add will be a child of the client area 
            clip box (true) or the a direct child of the clip control itself (false)</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.Add(TomShane.Neoforce.Controls.Control)">
            <summary>
            Adds a child control to the clip box.
            </summary>
            <param name="control">Child control to add to the clip control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.Remove(TomShane.Neoforce.Controls.Control,System.Boolean)">
            <summary>
            Removes the specified child control from the parent list.
            </summary>
            <param name="control">Child control to remove from the clip control's list.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the clip control and its child controls.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the clip control and its child controls.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resize events for the clip control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipControl.AdjustMargins">
            <summary>
            Adjusts the margins of the clip control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ClipControl.ClientArea">
            <summary>
            Gets or sets the client area of the clip control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ClipControl.ClientMargins">
            <summary>
            Gets or sets the client area margins of the clip control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ExitDialog">
            <summary>
            Dialog window asking users to confirm or cancel an exit operation.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Dialog">
            <summary>
            Represents a dialog window.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Window">
            <summary>
            Represents a window with a close button.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ModalContainer">
            <summary>
            Represents a control/window that remains focused until dealt with.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Container">
            <summary>
            Represents a root-level control designed to hold one or more child controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.sbVert">
            <summary>
            Container control's vertical scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.sbHorz">
            <summary>
            Container control's horizontal scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.mainMenu">
            <summary>
            Container control's main menu.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.toolBarPanel">
            <summary>
            Tool bar panel of the container control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.statusBar">
            <summary>
            Status bar control of the container.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.autoScroll">
            <summary>
            Indicates if the container will automatically show/hide the client area scroll bars as needed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.defaultControl">
            <summary>
            Container's default control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Container.scrollAlot">
            <summary>
            Scroll by PageSize (true) or StepSize (false)
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new container control.
            </summary>
            <param name="manager">GUI manager for the container control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.Init">
            <summary>
            Initializes the container control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.InitSkin">
            <summary>
            Initializes the skin of the container control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.Bars_Resize(System.Object,TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handlers for when the main menu, tool bar panel, or status bar are resized. 
            (Updates the container margins.)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.AdjustMargins">
            <summary>
            Adjusts the container's margins to account for the visibility of the main menu, 
            the tool bar panel, the status bar, and the scroll bars.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.Add(TomShane.Neoforce.Controls.Control,System.Boolean)">
            <summary>
            Adds a child control to the container.
            </summary>
            <param name="control">The child control to add to the container.</param>
            <param name="client">Indicates if the control will be a child of the client area 
            (true) or a direct descendant of the container. (false)</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the container control and all child controls.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the container control and all child controls.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the container control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.OnSkinChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when the container's skin is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.PositionScrollBars">
            <summary>
            Adjusts the position of the container's horizontal and vertical scroll bars.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.CalcScrolling">
            <summary>
            Updates the visibility of scroll bars based on client area actual and vitual dimensions.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to the specified scroll bar positions.
            </summary>
            <param name="x">New horizontal scroll bar value.</param>
            <param name="y">New vertical scroll bar value.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.ScrollTo(TomShane.Neoforce.Controls.Control)">
            <summary>
            Adjusts the scroll bar values so the specified control is displayed in the client region.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.ScrollBarValueChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in scroll bar values.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing of the container control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.Invalidate">
            <summary>
            Invalidates the control and forces redrawing of it. 
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Container.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles click events for the container control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.ScrollBarValue">
            <summary>
            Gets the values of the container's horizontal and vertical scroll bars.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.Visible">
            <summary>
            Indicates if the container is visible. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.DefaultControl">
            <summary>
            Gets or sets the default control of the container. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.AutoScroll">
            <summary>
            Indicates if scroll bars will be displayed/hidden automatically.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.MainMenu">
            <summary>
            Gets or sets the main menu of the container control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.ToolBarPanel">
            <summary>
            Gets or sets the tool bar panel of the container control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.StatusBar">
            <summary>
            Gets or sets the container's status bar control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.ScrollAlot">
            <summary>
            Scroll by PageSize (true) or StepSize (false)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.VerticalScrollBar">
            <summary>
            Gets the container's vertical scroll bar.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Container.HorizontalScrollBar">
            <summary>
            Gets the container's horizontal scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ModalContainer.modalResult">
            <summary>
            Indicates the result of the modal dialog.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ModalContainer.lastModal">
            <summary>
            Parent modal control, if there is any.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new modal dialog control.
            </summary>
            <param name="manager">GUI manager for the modal dialog control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.ShowModal">
            <summary>
            Shows the control as a modal dialog.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.Close">
            <summary>
            Closes the modal dialog.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.Close(TomShane.Neoforce.Controls.ModalResult)">
            <summary>
            Closes the modal dialog with the specified result.
            </summary>
            <param name="modalResult">Dialog result to close the window with.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.OnClosing(TomShane.Neoforce.Controls.WindowClosingEventArgs)">
            <summary>
            Handles the closing of the modal container control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.OnClosed(TomShane.Neoforce.Controls.WindowClosedEventArgs)">
            <summary>
            Handles the closed event of the modal container.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.Input_KeyDown(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the modal container.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ModalContainer.Input_GamePadDown(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the modal container.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ModalContainer.Visible">
            <summary>
            Indicates if the modal container is visible or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ModalContainer.IsModal">
            <summary>
            Indicates if the container is modal or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ModalContainer.ModalResult">
            <summary>
            Gets or sets the result of the modal dialog. (Usually indicating 
            which button of the dialog was pressed.)
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ModalContainer.Closing">
            <summary>
            Occurs when the dialog is beginning to close.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ModalContainer.Closed">
            <summary>
            Occurs when the dialog has finished closing.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.skWindow">
            <summary>
            String for accessing the skin object of the window.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrWindow">
            <summary>
            String for accessing the window layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrCaption">
            <summary>
            String for accessing the window's caption area layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrFrameTop">
            <summary>
            String for accessing the window's top border layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrFrameLeft">
            <summary>
            String for accessing the window's left border layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrFrameRight">
            <summary>
            String for accessing the window's right border layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrFrameBottom">
            <summary>
            String for accessing the window's bottom border layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrIcon">
            <summary>
            String for accessing the window icon layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.skButton">
            <summary>
            String for accessing the skin object for the close button of the window.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.minButton">
            <summary>
            String for accessing the skin object for the close button of the window.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrButton">
            <summary>
            String for accessing the window button control layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.skShadow">
            <summary>
            String for accessing the skin object for the window shadow.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.lrShadow">
            <summary>
            String for accessing the window shadow layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.transparent">
            <summary>
            Indicates if the window is transparent, therefor you can see the game behind it
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.minimizeButtonVisible">
            <summary>
            Indicates if the minimize button is drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.closeButtonVisible">
            <summary>
            Indicates if the close button is drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.iconVisible">
            <summary>
            Indicates if the window icon is drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.icon">
            <summary>
            Window icon image.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.shadow">
            <summary>
            Indicates if the window shadow is drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.captionVisible">
            <summary>
            Indicates if the window caption is drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.borderVisible">
            <summary>
            Indicates if the window border is drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.oldAlpha">
            <summary>
            Alpha value of the window.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Window.dragAlpha">
            <summary>
            Alpha value used when dragging the window.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new Window.
            </summary>
            <param name="manager">GUI manager for the window.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.Dispose(System.Boolean)">
            <summary>
            Cleans up window resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.Init">
            <summary>
            Initializes the window.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.InitSkin">
            <summary>
            Initializes the skin of the window.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.btnClose_SkinChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles reskinning the close button when the skin changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.btnMin_SkinChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles reskinning the minimize button when the skin changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.Render(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the window.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.GetIconRect">
            <summary>
            Creates the rectangle where the window icon should be displayed.
            </summary>
            <returns>Returns the window icon's destination region where it will be drawn. </returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the window and all child controls.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the window will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.btnClose_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles closing the window when the close button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.btnMin_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles minimizing the window when the minimize button is clicked.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.Center">
            <summary>
            Centers the window on screen.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing of the window.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.OnMoveBegin(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when the window starts a move event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.OnMoveEnd(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when the window completes a move event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.OnDoubleClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles double click events for the window. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.AdjustMargins">
            <summary>
            Adjusts the client area margins based on the visibility of the caption area and window border.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Window.SetMovableArea">
            <summary>
            Sets the region where the window can be moved to.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.CloseButton">
            <summary>
            The button that closes the window.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.MinimizeButton">
            <summary>
            The button that minimizes the window.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.Transparent">
            <summary>
            Indicates if the window is transparent, therefor you can see the game behind it
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.Icon">
            <summary>
            Gets or sets the window icon image.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.Shadow">
            <summary>
            Indicates if the window should draw its shadow.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.CloseButtonVisible">
            <summary>
            Indicates if the window should draw its close button.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.MinimizeButtonVisible">
            <summary>
            Indicates if the window should draw its close button.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.IconVisible">
            <summary>
            Indicates if the window should draw its icon.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.CaptionVisible">
            <summary>
            Indicates if the window should draw its caption.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.BorderVisible">
            <summary>
            Indicates if the window should draw its border.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Window.DragAlpha">
            <summary>
            Gets or sets the alpha value that should be applied to the window during a drag operation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Dialog.pnlTop">
            <summary>
            Panel containing the title and message of the dialog.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Dialog.lblCapt">
            <summary>
            Dialog window title.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Dialog.lblDesc">
            <summary>
            Dialog window message.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Dialog.pnlBottom">
            <summary>
            Panel containing the dialog buttons.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Dialog.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new dialog window.
            </summary>
            <param name="manager">GUI manager for the dialog window.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Dialog.Init">
            <summary>
            Initializes the dialog window.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Dialog.TopPanel">
            <summary>
            Gets the top panel of the dialog. (Contains the caption and description.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Dialog.BottomPanel">
            <summary>
            Gets the bottom panel of the dialog. (Contains the dialog button controls.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Dialog.Caption">
            <summary>
            Gets the dialog window title.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Dialog.Description">
            <summary>
            Gets the dialog window message.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ExitDialog.btnYes">
            <summary>
            Yes button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ExitDialog.btnNo">
            <summary>
            No button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ExitDialog.lblMessage">
            <summary>
            Do you want to exit message.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ExitDialog.imgIcon">
            <summary>
            Dialog window icon image.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ExitDialog.#ctor(TomShane.Neoforce.Controls.Manager,System.String)">
            <summary>
            Creates a new instance of the exit dialog window.
            </summary>
            <param name="manager">GUI manager for the dialog window.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ExitDialog.Init">
            <summary>
            Initializes the exit dialog window.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Colors.ColorFromHSV(System.Double,System.Double,System.Double)">
            <summary>
            Convert HSV to RGB
            h is from 0-360
            s,v values are 0-1
            r,g,b values are 0-255
            Based upon http://ilab.usc.edu/wiki/index.php/HSV_And_H2SV_Color_Space#HSV_Transformation_C_.2F_C.2B.2B_Code_2
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Colors.Clamp(System.Int32)">
            <summary>
            Clamp a value to 0-255
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Extensions.ToLowerFast(System.String)">
            <summary>
            Lowercase string.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Extensions.ToHex(Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Creates an ARGB hex string representation of the <see cref="T:Microsoft.Xna.Framework.Color"/> value.
            </summary>
            <param name="color">The <see cref="T:Microsoft.Xna.Framework.Color"/> value to parse.</param>
            <param name="includeHash">Determines whether to include the hash mark (#) character in the string.</param>
            <returns>A hex string representation of the specified <see cref="T:Microsoft.Xna.Framework.Color"/> value.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TomShane.Neoforce.Controls.Extensions.ToColor(System.String)" -->
        <member name="F:TomShane.Neoforce.Controls.FileDialog.cmbDirectory">
            <summary>
            The combo box where the current directory is displayed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.cmbDrives">
            <summary>
            The combo box where the drives are listed. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.lstFiles">
            <summary>
            The list box where directory files are displayed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.txtFileName">
            <summary>
            Stores the full path of the currently selected file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.txtFilter">
            <summary>
            Textbox for file extension filter.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.btnOpen">
            <summary>
            Button to open the selected file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.btnCancel">
            <summary>
            Button to cancel the file open operation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.btnDirectoryUp">
            <summary>
            Button used to move up one directory level.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.filters">
            <summary>
            Stores the list of file extensions to display. An 
            empty list will display all files. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.directory">
            <summary>
            Currently selected folder (full path.)
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.file">
            <summary>
            Currently selected file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.FileDialog.showHiddenFiles">
            <summary>
            Flags for showing/hiding hidden and system files and folders.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new instance of the open file dialog. 
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.Init">
            <summary>
            Initializes the dialog and its controls.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.btnCancel_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Closes the dialog.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.btnOpen_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Closes the dialog if a file was selected. The file name can be retrieved 
            from the Closing event. See test app for example. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.btnDirectoryUp_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Moves up a directory level. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.cmbDrives_ItemIndexChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.FileDialog.lstFiles_ItemIndexChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.FileDialog.Filters">
            <summary>
            Gets the list of file extension filters for the dialog. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.FileDialog.FileName">
            <summary>
            Gets the name of the selected file. 
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ColorPicker">
            <summary>
            Represents a color/hue picker control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ColorPicker.range">
            <summary>
            Range the track bar control's value can be within. [0, range]
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ColorPicker.hue">
            <summary>
            Current value of the track bar control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ColorPicker.stepSize">
            <summary>
            Small increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ColorPicker.pageSize">
            <summary>
            Large increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ColorPicker.scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ColorPicker.btnSlider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new ColorPicker control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.Init">
            <summary>
            Initializes the track bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.InitSkin">
            <summary>
            Initializes the skin of the track bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the track bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.btnSlider_Move(System.Object,TomShane.Neoforce.Controls.MoveEventArgs)">
            <summary>
            Handles slider button move events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.RecalcParams">
            <summary>
            Updates the position of the slider button.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.OnMousePress(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse press events for the track bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.btnSlider_GamePadPress(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad left/right button presses for the track bar control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.btnSlider_KeyPress(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the track bar control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing of the track bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.OnValueChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's value.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.OnRangeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's range.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.OnPageSizeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's page size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ColorPicker.OnStepSizeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's step size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.SelectedColor">
            <summary>
            Gets the current color of the color picker control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.Hue">
            <summary>
            Gets or sets the current value of the color picker control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.Range">
            <summary>
            Gets or sets the value range of the track bar control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.PageSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for large increments.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.StepSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for small increments.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.Scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ColorPicker.Slider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ColorPicker.ValueChanged">
            <summary>
            Occurs when the value of the track bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ColorPicker.RangeChanged">
            <summary>
            Occurs when the range of the track bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ColorPicker.StepSizeChanged">
            <summary>
            Occurs when the step size value of the track bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ColorPicker.PageSizeChanged">
            <summary>
            Occurs when the page size of the track bar changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.StatusBar">
            <summary>
            Represents a status bar control usually placed at the bottom of a window.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.StatusBar.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new StatusBar control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.StatusBar.Init">
            <summary>
            Initializes the status bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.StatusBar.InitSkin">
            <summary>
            Initializes the skin of the status bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.StatusBar.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the status bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ToolBar">
            <summary>
            Represents a tool bar that is part of a menu system made of tool bar buttons.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ToolBar.row">
            <summary>
            Row of the tool bar panel this tool bar defines.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ToolBar.fullRow">
            <summary>
            Indicates if the tool bar should take up the full width of its parent tool bar container.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBar.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new ToolBar control.
            </summary>
            <param name="manager">GUI manager for the tool bar.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBar.Init">
            <summary>
            Initializes the tool bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBar.InitSkin">
            <summary>
            Initializes the skin of the tool bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBar.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the tool bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the tool bar will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ToolBar.Row">
            <summary>
            Gets or sets the row index this tool bar occupies in its parent container.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ToolBar.FullRow">
            <summary>
            Indicates if the tool bar should stretch across the entire width of its container.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ToolBarButton">
            <summary>
            Represents a single button of a ToolBar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarButton.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new ToolBarButton control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarButton.Init">
            <summary>
            Initializes the tool bar button.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarButton.InitSkin">
            <summary>
            Initializes the skin of the tool bar button.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarButton.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the tool bar button control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ToolBarPanel">
            <summary>
            Represents a ToolBar container.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new tool bar panel control.
            </summary>
            <param name="manager">GUI manager for the tool bar panel.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.Init">
            <summary>
            Initializes the tool bar panel control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.InitSkin">
            <summary>
            Initializes the skin for the tool bar panel control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the tool bar panel and all child controls.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the tool bar panel will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resize events for the tool bar panel control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the tool bar panel control.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolBarPanel.AlignBars">
            <summary>
            Positions and sizes the tool bar panel's child tool bar controls.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TrackBar">
            <summary>
            Represents a slider control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TrackBar.range">
            <summary>
            Range the track bar control's value can be within. [0, range]
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TrackBar.value">
            <summary>
            Current value of the track bar control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TrackBar.stepSize">
            <summary>
            Small increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TrackBar.pageSize">
            <summary>
            Large increment at which the track bar value changes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TrackBar.scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TrackBar.btnSlider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new TrackBar control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.Init">
            <summary>
            Initializes the track bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.InitSkin">
            <summary>
            Initializes the skin of the track bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the track bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.btnSlider_Move(System.Object,TomShane.Neoforce.Controls.MoveEventArgs)">
            <summary>
            Handles slider button move events.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.RecalcParams">
            <summary>
            Updates the position of the slider button.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.OnMousePress(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse press events for the track bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.btnSlider_GamePadPress(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad left/right button presses for the track bar control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.btnSlider_KeyPress(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the track bar control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing of the track bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.OnValueChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's value.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.OnRangeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's range.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.OnPageSizeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's page size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TrackBar.OnStepSizeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the track bar's step size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TrackBar.Value">
            <summary>
            Gets or sets the current value of the track bar control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TrackBar.Range">
            <summary>
            Gets or sets the value range of the track bar control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TrackBar.PageSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for large increments.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TrackBar.StepSize">
            <summary>
            Gets or sets the amount the track bar's value is altered for small increments.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TrackBar.Scale">
            <summary>
            Indicates if the scale for the track bar should be drawn.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TrackBar.Slider">
            <summary>
            Slider button that can be dragged to change the value of the track bar control.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.TrackBar.ValueChanged">
            <summary>
            Occurs when the value of the track bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.TrackBar.RangeChanged">
            <summary>
            Occurs when the range of the track bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.TrackBar.StepSizeChanged">
            <summary>
            Occurs when the step size value of the track bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.TrackBar.PageSizeChanged">
            <summary>
            Occurs when the page size of the track bar changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SideBarPanel">
            <summary>
            Standard container control. Nothing special about it. See Container class for more information.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SideBarPanel.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new SideBarPanel control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SideBarPanel.Init">
            <summary>
            Initializes the side bar panel control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GroupPanel">
            <summary>
            ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GroupPanel.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new group panel control.
            </summary>
            <param name="manager">GUI manager for the group panel.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GroupPanel.Init">
            <summary>
            Initializes the group panel control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GroupPanel.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the group panel control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the group panel should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.KeyboardLayout">
            <summary>
            Represents the layout of an English keyboard and helps to map
            Microsoft.Xna.Framework.Input.Keys values to their proper 
            string representations.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyboardLayout.name">
            <summary>
            Defines the type of keyboard layout.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyboardLayout.LayoutList">
            <summary>
            ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.KeyboardLayout.#ctor">
            <summary>
            Creates a new English KeyboardLayout object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.KeyboardLayout.GetKey(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Gets the key value from a KeyEventArgs object case-adjusted based on modifiers.
            </summary>
            <param name="args">KeyEventArgs object to retrieve the key value from.</param>
            <returns>Returns the pressed key as a string.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.KeyboardLayout.KeyToString(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <returns>Returns the mapped Keys value as a string.</returns>
        </member>
        <member name="P:TomShane.Neoforce.Controls.KeyboardLayout.Name">
            <summary>
            Gets or sets the name of the keyboard layout.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.CzechKeyboardLayout">
            <summary>
            Represents the layout of a Czech keyboard and helps to map
            Microsoft.Xna.Framework.Input.Keys values to their proper 
            string representations.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CzechKeyboardLayout.#ctor">
            <summary>
            Creates a new instance of the CzechKeyboardLayout class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CzechKeyboardLayout.KeyToString(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <returns>Returns the mapped Keys value as a string.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GermanKeyboardLayout">
            <summary>
            Represents the layout of a German keyboard and helps to map
            Microsoft.Xna.Framework.Input.Keys values to their proper 
            string representations.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GermanKeyboardLayout.#ctor">
            <summary>
            Creates a new instance of the GermanKeyboardLayout class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GermanKeyboardLayout.KeyToString(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <returns>Returns the mapped Keys value as a string.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.PolishKeyboardLayout">
            <summary>
            Represents the layout of a Polish keyboard and helps to map
            Microsoft.Xna.Framework.Input.Keys values to their proper 
            string representations.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.PolishKeyboardLayout.#ctor">
            <summary>
            Creates a new instance of the PolishKeyboardLayout class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.PolishKeyboardLayout.KeyToString(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Maps Keys objects to their respective keys.
            </summary>
            <param name="args">KeyEventArgs to get the key value from.</param>
            <returns>Returns the mapped Keys value as a string.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Layout">
            <summary>
            Provides methods for loading Neoforce controls from XML files.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Layout.Load(TomShane.Neoforce.Controls.Manager,System.String)">
            <summary>
            Reads the specified layout XML file asset.
            </summary>
            <param name="manager">GUI manager responsible for the controls contained in the layout XML file.</param>
            <param name="asset">Name of the layout XML asset. (Default asset names are file names without extensions.)</param>
            <returns>Returns the root control of the layout file with all child controls initialized.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Layout.LoadControl(TomShane.Neoforce.Controls.Manager,System.Xml.XmlNode,System.Type,TomShane.Neoforce.Controls.Control)">
            <summary>
            Loads a control from a layout XML file.
            </summary>
            <param name="manager">GUI manager for the control to load.</param>
            <param name="node">Control XML node.</param>
            <param name="type">Type of control specified in XML.</param>
            <param name="parent">Parent control of the control about to be loaded.</param>
            <returns>Returns the created Control.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Layout.LoadProperties(System.Xml.XmlNodeList,TomShane.Neoforce.Controls.Control)">
            <summary>
            Loads all properties defined in a layout XML file.
            </summary>
            <param name="node">Current XML node list.</param>
            <param name="c">Control to apply the property values to.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MainMenu">
            <summary>
            
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MenuBase">
            <summary>
            Base class for a menu control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuBase.itemIndex">
            <summary>
            Selected menu item index.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuBase.items">
            <summary>
            List of menu items composing the menu.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuBase.childMenu">
            <summary>
            Child menu of this menu.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuBase.rootMenu">
            <summary>
            Root menu of this menu.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuBase.parentMenu">
            <summary>
            Parent menu of this menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MenuBase.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new MenuBase object.
            </summary>
            <param name="manager">GUI manager for the menu base.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.MenuBase.ItemIndex">
            <summary>
            Gets or sets the menu's selected menu item index.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.MenuBase.ChildMenu">
            <summary>
            Gets or sets the menu's child menu.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.MenuBase.RootMenu">
            <summary>
            Gets or sets the menu's root menu.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.MenuBase.ParentMenu">
            <summary>
            Gets or sets the menu's parent menu.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.MenuBase.Items">
            <summary>
            Gets the list of menu items that make up the menu.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MainMenu.rs">
            <summary>
            Array of rectangles.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MainMenu.lastIndex">
            <summary>
            Last selected menu entry index.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new MainMenu object.
            </summary>
            <param name="manager">GUI manager for the main menu.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.Dispose(System.Boolean)">
            <summary>
            Cleans up after the main menu.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.Init">
            <summary>
            Initializes the main menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.InitSkin">
            <summary>
            Initializes the skin for the main menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the main menu.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the menu will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.TrackItem(System.Int32,System.Int32)">
            <summary>
            Highlights the menu item under the specified position.
            </summary>
            <param name="x">X position to check.</param>
            <param name="y">Y position to check.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.CheckArea(System.Int32,System.Int32)">
            <summary>
            Checks to see if the specified position is within the bounds of the menu or a child menu. ???
            </summary>
            <param name="x">X position to check.</param>
            <param name="y">Y position to check.</param>
            <returns>Returns true.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnMouseMove(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnMouseOut(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse out events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.HideSubMenu">
            <summary>
            Hides the currently visible child menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.HideMenu">
            <summary>
            Hides the menu and any visible child menus.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles mouse button click events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnKeyPress(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles arrow key press events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnGamePadPress(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles game pad button press events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnFocusGained(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles focus gained events for the main menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MainMenu.OnFocusLost(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles focus lost events for the main menu control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MenuItem">
            <summary>
            Represents a single, selectable, menu entry.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuItem.Text">
            <summary>
            Text to display for this menu item.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuItem.Items">
            <summary>
            List of child menu items belonging to this menu item.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuItem.Separated">
            <summary>
            Indicates if the menu item appears after a menu separator. ??? 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuItem.Image">
            <summary>
            Image to display to the left of the menu item. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MenuItem.Enabled">
            <summary>
            Indicates if the menu item is able to be selected or not.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MenuItem.#ctor">
            <summary>
            Creates a new default menu item.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MenuItem.#ctor(System.String)">
            <summary>
            Creates a new menu item with the specified text.
            </summary>
            <param name="text">Menu item's text representation.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MenuItem.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new menu item with the specified text.
            </summary>
            <param name="text">Menu item's text representation.</param>
            <param name="separated">Indicates if the menu item appears after a menu separator and needs some extra padding. ???</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MenuItem.ClickInvoke(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Raises the menu item click event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MenuItem.SelectedInvoke(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Raises the menu item selected event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:TomShane.Neoforce.Controls.MenuItem.Click">
            <summary>
            Occurs when the menu item is clicked.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.MenuItem.Selected">
            <summary>
            Occurs when the menu item is selected.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.EventedList`1">
            <summary>
            Represents a collection that fires events when items are added/removed.
            </summary>
            <typeparam name="T">Specifies the type of objects in the collection.</typeparam>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.#ctor">
            <summary>
            Creates a new evented list.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.#ctor(System.Int32)">
            <summary>
            Creates a new evented list of the specified size.
            </summary>
            <param name="capacity">Initial capacity of the evented list.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates a new evented list from the specified source list.
            </summary>
            <param name="collection">Source collection used to populate the evented list.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.Add(`0)">
            <summary>
            Adds a new item to the collection.
            </summary>
            <param name="item">Item to add to the collection.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.Remove(`0)">
            <summary>
            Removes the specified item from the collection.
            </summary>
            <param name="obj">Item to remove from the collection.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.Clear">
            <summary>
            Removes all the items from the collection.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a collection of items to the collection.
            </summary>
            <param name="collection">Collection of items to add to the collection.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts a new item into the collection at the specified index.
            </summary>
            <param name="index">Zero-based index defining the insertion position.</param>
            <param name="item">Item to be inserted into the collection.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts a collection of items into the collection at the specified position.
            </summary>
            <param name="index">Zero-based index where the collection will be inserted.</param>
            <param name="collection">Collection of items to add to the collection at the specified index.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Removes all items in the collection that match the specified condition.
            </summary>
            <param name="match">Predicate method used to evaluate collection items.</param>
            <returns>Returns the number of items removed from the collection.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.RemoveAt(System.Int32)">
            <summary>
            Removes an item from the collection at the specified index.
            </summary>
            <param name="index">Zero-based index specifying which item to remove.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventedList`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of items from the collection beginning at the specified index.
            </summary>
            <param name="index">Zero-based index to begin removal.</param>
            <param name="count">Number of items to remove from the collection.</param>
        </member>
        <member name="E:TomShane.Neoforce.Controls.EventedList`1.ItemAdded">
            <summary>
            Occurs when an item is added to the list.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.EventedList`1.ItemRemoved">
            <summary>
            Occurs when an item is removed from the list.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.StackPanel.AutoRefresh">
            <summary>
            Should the stack panel refresh itself, when a control is added
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ToolTip">
            <summary>
            Represents a tool tip for a control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolTip.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new tool tip control.
            </summary>
            <param name="manager">GUI manager for the tool tip control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolTip.Init">
            <summary>
            Initializes the tool tip control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolTip.InitSkin">
            <summary>
            Initializes the skin of the tool tip control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ToolTip.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the tool tip control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle where the tool tip should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ToolTip.Visible">
            <summary>
            Indicates whether the tool tip is visible or not.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ContextMenu">
            <summary>
            Represents a control's context menu.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ContextMenu.timer">
            <summary>
            Menu delay timer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ContextMenu.sender">
            <summary>
            Control associated with the context menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new context menu control.
            </summary>
            <param name="manager">GUI manager for the context menu control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the context menu control.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.Init">
            <summary>
            Initializes the context menu control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.InitSkin">
            <summary>
            Initializes the skin of the context menu control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the context menu control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.LineHeight">
            <summary>
            Gets the height of a single entry in the context menu.
            </summary>
            <returns>Returns the height of a single context menu entry.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.LineWidth">
            <summary>
            Gets the width of the longest entry in the context menu.
            </summary>
            <returns>Returns the width of the longest entry in the context menu.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.AutoSize">
            <summary>
            Calculates the dimensions of the context menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.TrackItem(System.Int32,System.Int32)">
            <summary>
            Determines which, if any, menu entry of the context menu is at the specified offset and updates
            the selected index, and raises the selected event for the new selection if needed.
            </summary>
            <param name="x">X position of the mouse as an offset from the context menu origins.</param>
            <param name="y">Y position of the mouse as an offset from the context menu origins.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.OnMouseMove(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the context menu control.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.OnMouseOut(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse out events for the context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles mouse click events for the context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.OnKeyPress(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.OnGamePadPress(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles button press events for the context menu.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.HideMenu(System.Boolean)">
            <summary>
            Hides the context menu or one of its child menus.
            </summary>
            <param name="hideCurrent">Indicates if the context menu should be hidden (true) or if only the child menu should be hidden. </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.Show">
            <summary>
            Displays the context menu.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.Show(TomShane.Neoforce.Controls.Control,System.Int32,System.Int32)">
            <summary>
            Displays the menu at the specified position.
            </summary>
            <param name="sender">Control requesting the context menu is displayed.</param>
            <param name="x">X position to display the context menu.</param>
            <param name="y">Y position to display the context menu.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.Input_MouseDown(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the context menu.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ContextMenu.CheckArea(System.Int32,System.Int32)">
            <summary>
            Determines if the specified point lies within the context menu or one of its child menus.
            </summary>
            <param name="x">X position to check.</param>
            <param name="y">Y position to check.</param>
            <returns>Returns true if the specified point is within the bounds of the context menu or one of its child menus.
            Returns false if the context menu is hidden or if the specified point is outside of the context menu boundaries.</returns>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ContextMenu.Sender">
            <summary>
            Gets or sets the control requesting the context menu be displayed.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TabControlGamePadActions">
            <summary>
            Provides tab navigation support for gamepads.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GamePadActions">
            <summary>
            Defines the gamepad button to action mappings.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.Click">
            <summary>
            Button mapped to a control click event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.Press">
            <summary>
            Button mapped to a control press event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.Left">
            <summary>
            Button mapped to the Left action. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.Right">
            <summary>
            Button mapped to the Right action. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.Up">
            <summary>
            Button mapped to the Up action.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.Down">
            <summary>
            Button mapped to the Down action.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.NextControl">
            <summary>
            Button mapped to control navigation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.PrevControl">
            <summary>
            Button mapped to control navigation.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadActions.ContextMenu">
            <summary>
            Button mapped to show the context menu of a control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TabControlGamePadActions.NextTab">
            <summary>
            Button used to switch to the next tab. (RightTrigger)
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TabControlGamePadActions.PrevTab">
            <summary>
            Button used to switch to the previous tab. (LeftTrigger)
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TabPage">
            <summary>
            Represents a single page of a tab control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TabPage.headerRect">
            <summary>
            Defines the header region of the tab page.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabPage.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new TabPage control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabPage.CalcRect(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.SpriteFont,TomShane.Neoforce.Controls.Margins,Microsoft.Xna.Framework.Point,System.Boolean)">
            <summary>
            Calculates the region where the tab page header will be displayed.
            </summary>
            <param name="prev">Header region of the previous tab page control.</param>
            <param name="font">Font used to draw the header text.</param>
            <param name="margins">Tab header content margins.</param>
            <param name="offset">Offset to apply from previous tab.</param>
            <param name="first">Indicates if this is the first tab page header.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TabPage.HeaderRect">
            <summary>
            Gets the header region of the tab page.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TabControl">
            <summary>
            Represents a control containing one or more tab pages.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TabControl.tabPages">
            <summary>
            List of tab pages that make up the tab control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TabControl.selectedIndex">
            <summary>
            Index of the selected tab page.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TabControl.hoveredIndex">
            <summary>
            Index of the tab page header hovered by the mouse, if any.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new TabControl.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.Init">
            <summary>
            Initializes the tab control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.InitSkin">
            <summary>
            Initializes the skin of the tab control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the tab control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the tab control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.AddPage(System.String)">
            <summary>
            Creates a tab page with the specified header text and adds it to the tab control.
            </summary>
            <param name="text">Tab page header text.</param>
            <returns>Returns the created tab page.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.AddPage">
            <summary>
            Creates a tab page with the default header text and adds it to the tab control.
            </summary>
            <returns>Returns the created tab page.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.RemovePage(TomShane.Neoforce.Controls.TabPage,System.Boolean)">
            <summary>
            Removes the specified tab page from the tab control and disposes it (if specified.)
            </summary>
            <param name="page">Tab page to remove from the tab control.</param>
            <param name="dispose">Indicates if the tab page should be disposed after removal.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.RemovePage(TomShane.Neoforce.Controls.TabPage)">
            <summary>
            Removes the specified tab page from the control.
            </summary>
            <param name="page">Tab page to remove from the tab control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse down events for the tab control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.OnMouseMove(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the tab control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.Input_GamePadDown(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad input for the tab control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TabControl.OnPageChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when a new tab page is selected.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TabControl.TabPages">
            <summary>
            Returns the list of tab pages belonging to the tab control as an array.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TabControl.SelectedIndex">
            <summary>
            Gets or sets the index of the selected tab page.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TabControl.SelectedPage">
            <summary>
            Gets or sets the selected tab page.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.TabControl.PageChanged">
            <summary>
            Occurs when the selected tab page changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ScrollBarValue">
            <summary>
            Stores the values of the container's horizontal and vertical scroll bars.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.BevelStyle">
            <summary>
            Describes different bevel styles.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.BevelBorder">
            <summary>
            Describes the side(s) of a control where a bevel will be applied. 
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Bevel">
            <summary>
            Describes a beveled border of a control. (Mainly used to make stuff look fancier.)
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Bevel.border">
            <summary>
            Specifies which sides of a control the beveled edge will be applied to.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Bevel.style">
            <summary>
            Describes the style of the beveled edges.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new Bevel control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.Init">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.InitSkin">
            <summary>
            Initializes the control skin.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the bevel control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Bounds of the control.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.DrawPart(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.BevelBorder,TomShane.Neoforce.Controls.BevelStyle,System.Boolean)">
            <summary>
            Draws a piece of the beveled control based on the bevel's border and style.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Bounds of the control the bevel is applied to.</param>
            <param name="pos">Specifies which side of the control is beveled.</param>
            <param name="style">Specifies the style of beveling to apply to the control.</param>
            <param name="all">Indicates if the bevel is applied to a single side (false) or all sides (true) of the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.OnBorderChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles bevel border changed events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Bevel.OnStyleChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles bevel style changed events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Bevel.Border">
            <summary>
            Gets or sets the sides of a control the beveled edge will be applied to.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Bevel.Style">
            <summary>
            Gets or sets the style of the beveled control.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Bevel.BorderChanged">
            <summary>
            Occurs when the border style of the bevel changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Bevel.StyleChanged">
            <summary>
            Occurs when the style of the bevel changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.DeviceEventHandler">
            <summary>
            Defines the signature for a device event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinEventHandler">
            <summary>
            Defines the signature for a skin event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.EventHandler">
            <summary>
            Defines the signature for event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MouseEventHandler">
            <summary>
            Defines the signature for mouse event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.KeyEventHandler">
            <summary>
            Defines the signature for key event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GamePadEventHandler">
            <summary>
            Defines the signature for gamepad event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.DrawEventHandler">
            <summary>
            Defines the signature for draw event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MoveEventHandler">
            <summary>
            Defines the signature for move event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ResizeEventHandler">
            <summary>
            Defines the signature for resize event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.WindowClosingEventHandler">
            <summary>
            Defines the signature for window closing event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.WindowClosedEventHandler">
            <summary>
            Defines the signature for window closed event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ConsoleMessageEventHandler">
            <summary>
            Defines the signature for console message event handlers.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ConsoleMessage">
            <summary>
            Represents a single message sent to a console.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessage.Text">
            <summary>
            Message text.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessage.Channel">
            <summary>
            Console channel index.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessage.Time">
            <summary>
            Message time stamp.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessage.Color">
            <summary>
            Color of the message, If different than channel color.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessage.NoShow">
            <summary>
            Defines if the date/time is shown, or plain text
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessage.Lines">
            <summary>
            Describes how many lines the text has.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ConsoleMessage.#ctor(System.String,System.Byte,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new console message with color.
            </summary>
            <param name="text">Message text.</param>
            <param name="channel">Console channel index.</param>
            <param name="color">Color of the message</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ConsoleMessage.#ctor(System.String,System.Byte)">
            <summary>
            Creates a new console message.
            </summary>
            <param name="text">Message text.</param>
            <param name="channel">Console channel index.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ChannelList">
            <summary>
            Represents a list of console channels.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ChannelList.Item(System.String)">
            <summary>
            Gets or sets a console channel by channel name.
            </summary>
            <param name="name">Console channel name.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ChannelList.Item(System.Byte)">
            <summary>
            Gets or sets a console channel by the channel's index.
            </summary>
            <param name="index">Console channel index.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ConsoleChannel">
            <summary>
            Represents a single channel of the console.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleChannel.name">
            <summary>
            Name of the console channel.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleChannel.index">
            <summary>
            Index of the console channel.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleChannel.color">
            <summary>
            Color of the console channel's message text.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ConsoleChannel.#ctor(System.Byte,System.String,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new console channel.
            </summary>
            <param name="index">Index of the console channel.</param>
            <param name="name">Name of the console channel.</param>
            <param name="color">Color of the console channel message text.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ConsoleChannel.Index">
            <summary>
            Gets or sets the index of the console channel.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ConsoleChannel.Color">
            <summary>
            Gets or sets the text color of the console channel's messages.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ConsoleChannel.Name">
            <summary>
            Gets or sets the name of the console channel.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ConsoleMessageFormats">
            <summary>
            Describes the format of a console message.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessageFormats.None">
            <summary>
            Messages only display the body text.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessageFormats.ChannelName">
            <summary>
            Messages are prefixed with the channel name.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessageFormats.TimeStamp">
            <summary>
            Messages are prefixed with the time they were sent.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessageFormats.All">
            <summary>
            Messages are prefixed with the channel name and timestamp.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Console">
            <summary>
            Multi-channel console control that also allows user text input.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.txtMain">
            <summary>
            Text box control where console messages can be input.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.cmbMain">
            <summary>
            Console channel selection box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.sbVert">
            <summary>
            Console text box's vertical scroll bar control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.buffer">
            <summary>
            Console message list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.sentMessages">
            <summary>
            Users sent message list
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.channels">
            <summary>
            List of console channels for this console.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.filter">
            <summary>
            Console channel filter list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.messageFormat">
            <summary>
            Console message format.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.channelsVisible">
            <summary>
            Indicates if the channel selection combo box is visible.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.textBoxVisible">
            <summary>
            Indicates if the user input text box is visible.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.historyIndex">
            <summary>
            Selected history by pressing "Up"
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new console control.
            </summary>
            <param name="manager">GUI manager for the console.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.PositionControls">
            <summary>
            Helper to position controls based on the visibility of the input text box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.Init">
            <summary>
            Initializes the console control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.InitSkin">
            <summary>
            Initializes the skin of the console control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Console.LastMouseState">
            <summary>
            Updates the console control.
            </summary>
            <param name="gameTime"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the list box and watches for changes in list size.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.ClientArea_Draw(System.Object,TomShane.Neoforce.Controls.DrawEventArgs)">
            <summary>
            Draws the client area of the console.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the console control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle where the control should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.txtMain_FocusGained(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Updates the active console channel and the text color when 
            the text box control receives focus.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.txtMain_KeyDown(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key down events for the text box. 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.txtMain_GamePadDown(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.SendMessage(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles key and button press events the console input text box receives.
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.OnMessageSent(TomShane.Neoforce.Controls.ConsoleMessageEventArgs)">
            <summary>
            Handles console message sent events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.channels_ItemAdded(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles repopulating the channel list when an item is added.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.channels_ItemRemoved(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles repopulating the channels list when items are removed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.buffer_ItemAdded(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles adding new messages to the console message area.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.CalcScrolling">
            <summary>
            Updates the scroll bar values based on the font size, console dimensions, and number of messages.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.sbVert_ValueChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Redraws the console's message area after a scrolling event occurs.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Updates scroll bar values after the console window has been resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Console.GetFilteredBuffer(System.Collections.Generic.List{System.Byte})">
            <summary>
            Gets all console messages from channels with matching indexes specified in the filter list.
            </summary>
            <param name="filter">List of channel indexes to retrieve messages for.</param>
            <returns>Returns all messages from channels whose index is specified in the filter list.</returns>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.MessageBuffer">
            <summary>
            Gets or sets the console's message buffer.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.Channels">
            <summary>
            Gets or sets the console's channel list.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.ChannelFilter">
            <summary>
            Gets or sets the console's channel filter.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.SelectedChannel">
            <summary>
            Gets or sets the console's current channel.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.MessageFormat">
            <summary>
            Gets or sets the console's message format.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.ChannelsVisible">
            <summary>
            Indicates whether the console is displaying the console channels or not. ???
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.TextBoxVisible">
            <summary>
            Indicates if the console's text box is visible or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Console.TextBox">
            <summary>
            The textbox input for the console
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Console.MessageSent">
            <summary>
            Occurs when a console message is sent.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SideBar">
            <summary>
            Represents a panel docked on the side of a container. ???
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Panel">
            <summary>
            Represents a panel container. (Mainly for grouping controls or splitting up a form.) 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Panel.bevel">
            <summary>
            Describes the edges of the panel.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Panel.bevelStyle">
            <summary>
            Describes the style of beveled edge to apply when drawing.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Panel.bevelBorder">
            <summary>
            Specifies which side(s) of the panel container will be drawn with a beveled edge.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Panel.bevelMargin">
            <summary>
            Margin between the beveled edge and the panel's content area. ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Panel.bevelColor">
            <summary>
            Color of the panel's bevel.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new Panel control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.Init">
            <summary>
            Initializes the Panel control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.InitSkin">
            <summary>
            Initializes the skin of the panel control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.AdjustMargins">
            <summary>
            Updates the client area margins of the panel based on style, borders, and skin settings.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the panel control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the panel will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.OnBevelBorderChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles bevel border changes for the panel.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.OnBevelStyleChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles bevel style changes for the panel.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Panel.OnBevelMarginChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles bevel margin changes for the panel.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Panel.BevelStyle">
            <summary>
            Gets or sets the style of beveled edge to use when drawing the panel border.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Panel.BevelBorder">
            <summary>
            Get or set which side(s) of the panel will have a beveled edge.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Panel.BevelMargin">
            <summary>
            Gets or sets the margin amount between the bevel and the panel's content area.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Panel.BevelColor">
            <summary>
            Gets or sets the color of the panel's beveled edges.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Panel.BevelBorderChanged">
            <summary>
            Occurs when the panel's bevel border style has changed.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Panel.BevelStyleChanged">
            <summary>
            Occurs when the panel's bevel styl has changed.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Panel.BevelMarginChanged">
            <summary>
            Occurs when the panel's bevel margin has changed.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SideBar.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new SideBar control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SideBar.Init">
            <summary>
            Initializes the side bar panel.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SideBar.InitSkin">
            <summary>
            Initializes the skin of the side bar panel.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SideBar.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the side bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SpinBoxMode">
            <summary>
            Specifies the data that the spin box works with.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBoxMode.Range">
            <summary>
            Adjusts a single numeric value by the defined step amount. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBoxMode.List">
            <summary>
            Adjusts the index referencing the selected item in a collection.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SpinBox">
            <summary>
            Represents a text box with two buttons used to increase/decrease its value. 
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TextBox">
            <summary>
            Represents a text box control. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.skTextBox">
            <summary>
            String for accessing the text box control skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.lrTextBox">
            <summary>
            String for accessing the text box control layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.lrCursor">
            <summary>
            String for accessing the text box cursor layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.crDefault">
            <summary>
            Not used?
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.crText">
            <summary>
            String indicating which cursor resource should be used for this control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.showCursor">
            <summary>
            Indicates if the cursor should be displayed when hovered. ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.flashTime">
            <summary>
            Tracks elapsed time values used to control the visible state of the text insertion cursor.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.posx">
            <summary>
            X position of the text caret.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.posy">
            <summary>
            Y position of the text caret.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.passwordChar">
            <summary>
            Specifies which character will be used to mask input when the text box is in Password mode.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.mode">
            <summary>
            Indicates if the text box is a single-line, multi-line, or password text box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.shownText">
            <summary>
            Text that is currently visible in the client area. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.readOnly">
            <summary>
            Indicates if the text box can accept user input or if it is read-only.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.drawBorders">
            <summary>
            Indicates if the borders of the text box should be drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.selection">
            <summary>
            Currently selected text of the control, specified by starting and ending indexes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.caretVisible">
            <summary>
            Indicates if the caret is displayed or not.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.horz">
            <summary>
            Horizontal scroll bar of the text box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.vert">
            <summary>
            Vertical scroll bar of the text box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.lines">
            <summary>
            Text content broken into individual lines.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.linesDrawn">
            <summary>
            Number of lines of text that can fit vertically in the client area.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.charsDrawn">
            <summary>
            Number of characters that can fit horizontally in the client area.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.font">
            <summary>
            Font used to draw the control's text.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.wordWrap">
            <summary>
            Indicates if word wrap is enabled on multi-line text boxes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.scrollBars">
            <summary>
            Specifies which, if any, scroll bars should be displayed in the text box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.Separator">
            <summary>
            Characted used as the line separator character.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.text">
            <summary>
            Current text content of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.buffer">
            <summary>
            Internal use during text splitting operations.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBox.autoSelection">
            <summary>
            Indicates if all text should be selected automatically when the control gains focus.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new TextBox control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.Init">
            <summary>
            Initializes the text box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.InitSkin">
            <summary>
            Initializes the skin of the text box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the text box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the text box should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetFitChars(System.String,System.Int32)">
            <summary>
            Returns the number of characters of the specified text that will fit within the specified width.
            </summary>
            <param name="text">Text string to fit.</param>
            <param name="width">Width available for text placement.</param>
            <returns>Returns the number of characters, from the start of the string, that will fit in the width specified.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.DeterminePages">
            <summary>
            Updates the number of lines and characters drawn based on the current dimensions of the
            client area of the text box.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetMaxLine">
            <summary>
            Gets the line of the text box with the greatest length.
            </summary>
            <returns>The longest line in the text box.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.ClientArea_Draw(System.Object,TomShane.Neoforce.Controls.DrawEventArgs)">
            <summary>
            Handles drawing the client area of the text box control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetStringWidth(System.String,System.Int32)">
            <summary>
            Measures the width of the specified text or a sub-string of the text. 
            </summary>
            <param name="text">String to measure the width of.</param>
            <param name="count">Number of characters from the start of the string to measure.</param>
            <returns>Returns the width of the specified number of characters in the supplied text.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.ProcessScrolling">
            <summary>
            Updates scroll bar values and page sizes based on the dimensions of the client area
            of the text box and the current cursor position within the text box.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.DrawSelection(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the text box's selection overlay to highlight selected text.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Region where the selection overlay should be drawn.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the text box cursor state.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.FindPrevWord(System.String)">
            <summary>
            From the current cursor position, this finds the index of the start of the word behind it. 
            This will be the start of the current word, if the cursor is positioned in the middle of a
            word, or the start of the previous word if the cursor is at the start of a word..
            </summary>
            <param name="text">Text content to search.</param>
            <returns>Returns the index of the start of the previous word or zero if the cursor has reached the starting point.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.FindNextWord(System.String)">
            <summary>
            From the current cursor position, this finds the index of the start of the word ahead of it. 
            </summary>
            <param name="text">Text content to search.</param>
            <returns>Returns the index of the start of the next word or the last valid index if the cursor has reached the end point.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetPosY(System.Int32)">
            <summary>
            Gets the line index where the cursor is currently positioned.
            </summary>
            <param name="pos">Cursor position in text.</param>
            <returns>Returns the index of the line where the cursor is positioned.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetPosX(System.Int32)">
            <summary>
            Gets the column index of the specified position.
            </summary>
            <param name="pos">Position of the cursor in the text.</param>
            <returns>Returns the index of the column at the specified cursor position.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetPos(System.Int32,System.Int32)">
            <summary>
            Given the column (x) and line (y) indexes, this returns the cursor position 
            that matches the specified location.
            </summary>
            <param name="x">Column index.</param>
            <param name="y">Line index.</param>
            <returns>Returns the cursor position for the specified location.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.CharAtPos(Microsoft.Xna.Framework.Point)">
            <summary>
            Given a point (such as mouse position), this determines the position in the text
            box that is closest to the specified position.
            </summary>
            <param name="pos">Point to find the text position of.</param>
            <returns>Returns the cursor position that corresponds to the point received.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the text box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnMouseMove(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the text box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnMouseUp(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse up events for the text box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnKeyPress(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the text box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnGamePadDown(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the text box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.HandleGuide(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Begins showing the on-screen keyboard for text input via gamepad.
            </summary>
            <param name="pi"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.GetText(System.IAsyncResult)">
            <summary>
            Gets the text result from gamepad input via on-screen keyboard.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.SetupBars">
            <summary>
            Updates scroll bar settings based on dimensions of the client area and text content.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.AdjustMargins">
            <summary>
            Update the text box margins based on the visibility of the scroll bars.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resize events for the text box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.WrapWords(System.String,System.Int32)">
            <summary>
            Breaks up text content so that all lines fit within the width of the client area of the text box.
            </summary>
            <param name="text">Text content to word wrap.</param>
            <param name="size">Width of the text box the text will be wrapped in.</param>
            <returns>Returns the word wrapped string.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.SelectAll">
            <summary>
            Selects all text in the text box.
            </summary>
            
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.SplitLines(System.String)">
            <summary>
            Splits the specified text into a list of strings based on the text box separator character.
            </summary>
            <param name="text">Text to split.</param>
            <returns>List of strings delimited by the text box separator character.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.sb_ValueChanged(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles scroll events for the text box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnFocusLost(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when the text box loses focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.TextBox.OnFocusGained(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handler for when the text box gains focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.PosX">
            <summary>
            Gets or sets the X position of the caret on the current line.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.PosY">
            <summary>
            Gets or sets the Y position of the caret in the text box.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.Pos">
            <summary>
            Gets or sets the position of the caret in the text box.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.ScrollBars">
            <summary>
            Gets or sets the scroll bars the text box should display.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.PasswordChar">
            <summary>
            Gets or sets the character used to mask input when the text box is in password mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.CaretVisible">
            <summary>
            Indicates if the text insertion position is visible or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.Mode">
            <summary>
            Gets or sets the current mode of the text box control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.ReadOnly">
            <summary>
            Indicates if the text box allows user input or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.DrawBorders">
            <summary>
            Indicates if the borders of the text box control should be drawn or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.CursorPosition">
            <summary>
            Gets or sets the current position of the caret in the text box.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.SelectedText">
            <summary>
            Gets all text within the current selection.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.SelectionStart">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.AutoSelection">
            <summary>
            Indicates if all text should be selected automatically when the text box receives focus.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.SelectionLength">
            <summary>
            Gets or sets (from the current value of SelectionStart) the length of the selection. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.Lines">
            <summary>
            Returns the text content as a Separator delimited list of strings.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.TextBox.Text">
            <summary>
            Gets or sets the contents of the text box control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TextBox.Selection">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.btnUp">
            <summary>
            Button used to increase the spin box value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.btnDown">
            <summary>
            Button used to decrease the spin box value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.mode">
            <summary>
            Defines whether the spin box works with numeric values or if 
            it iterates through items defined in its item list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.items">
            <summary>
            Collection of items the spin box will display 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.value">
            <summary>
            Current value of the spin box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.minimum">
            <summary>
            Minimum value of the spin box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.maximum">
            <summary>
            Maximum value of the spin box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.step">
            <summary>
            Amount the value increases/decreases when the up/down buttons are clicked.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.rounding">
            <summary>
            Decimal places to round values to.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SpinBox.itemIndex">
            <summary>
            Selected item index if the items list is used.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.#ctor(TomShane.Neoforce.Controls.Manager,TomShane.Neoforce.Controls.SpinBoxMode)">
            <summary>
            Creates a new spin box control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
            <param name="mode">Indicates if the spin box uses numeric values or a collection of items.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.Init">
            <summary>
            Initializes the spin box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.InitSkin">
            <summary>
            Initializes the skin of the spin box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the spin box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing the spin box control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.ShiftIndex(System.Boolean)">
            <summary>
            Adjusts the spin box's value up or down. 
            </summary>
            <param name="direction">Indicates which way to shift index/values. (True to increase; false to decrease.)</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.btn_MousePress(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles button up/down clicks.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.OnKeyPress(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.OnGamePadPress(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles up/down inputs from a gamepad.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SpinBox.OnGamePadDown(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button press events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Mode">
            <summary>
            Gets or sets the data that the spin box works with. (Collection or numeric value.)
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.ReadOnly">
            <summary>
            Indicates if the control's text box is read-only or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Items">
            <summary>
            Gets the collection of objects the spin box iterates through in List mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Value">
            <summary>
            Gets or sets the spin box value in Range mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Minimum">
            <summary>
            Gets or sets the minimum value of the spin box in Range mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Maximum">
            <summary>
            Gets or sets the maximum value of the spin box in Range mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Step">
            <summary>
            Gets or sets the amount the value of the spin box changes when 
            the up or down button is pressed in Range mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.ItemIndex">
            <summary>
            Gets or sets the index of the selected item in the collection in List mode.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SpinBox.Rounding">
            <summary>
            Gets or sets the number of decimal places the spin box allows.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.RadioButtonMode">
            <summary>
            Indicates how other radio buttons are updated when a radio button is clicked.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.RadioButtonMode.Auto">
            <summary>
            Clicked radio button will update the checked state of other radio buttons.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.RadioButtonMode.Manual">
            <summary>
            Updating the check state of other radio buttons is a task left to the user.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.RadioButton">
            <summary>
            Similar to a check box control but allows the user to only select a single option of a radio button group.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.CheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.CheckBox.skCheckBox">
            <summary>
            String to reference the check box element in the skin file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.CheckBox.lrCheckBox">
            <summary>
            String to reference the control layer the checkbox is a part of.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.CheckBox.lrChecked">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.CheckBox.state">
            <summary>
            Indicates if the control is checked (true) or unchecked (false.)
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CheckBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new check box control.
            </summary>
            <param name="manager">GUI manager for the check box control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CheckBox.Init">
            <summary>
            Initializes the check box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CheckBox.InitSkin">
            <summary>
            Initializes the check box control's skin.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CheckBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the checkbox control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CheckBox.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles checkbox click events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.CheckBox.OnCheckedChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles the checked changed event when the value of the check state changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.CheckBox.Checked">
            <summary>
            Gets or sets the checked state of the control.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.CheckBox.CheckedChanged">
            <summary>
            Occurs when the control's check state value changes.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.RadioButton.skRadioButton">
            <summary>
            String used to access the RadioButton's skin control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.RadioButton.mode">
            <summary>
            Indicates if the control will update the check state of other radio button clicks when it's clicked.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.RadioButton.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new RadioButton control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.RadioButton.Init">
            <summary>
            Initializes the radio button control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.RadioButton.InitSkin">
            <summary>
            Initializes the skin of the radio button control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.RadioButton.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the radio button control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.RadioButton.OnClick(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles radio button mouse click events.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.RadioButton.Mode">
            <summary>
            Gets or sets the way the radio button handles updating other radio button control check states when it is clicked.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ImageBox">
            <summary>
            Represents a control that displays an image inside it.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ImageBox.image">
            <summary>
            Image the control will display.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ImageBox.sizeMode">
            <summary>
            Indicates how the image will be positioned/scaled when image 
            and control dimensions are not the same.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ImageBox.sourceRect">
            <summary>
            Defines the region of the texture that is displayed in the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ImageBox.rotation">
            <summary>
            Determines how the image will be rotated if needed.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ImageBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new image box control.
            </summary>
            <param name="manager">GUI manager for the image box control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ImageBox.Init">
            <summary>
            Initializes the image box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ImageBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the image box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle where the image box will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ImageBox.OnImageChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles when the control's image is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ImageBox.OnSizeModeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles when the control's size mode value is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ImageBox.Image">
            <summary>
            Gets or sets the image the control will display.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ImageBox.SourceRect">
            <summary>
            Defines the region of the texture that is displayed in the image box control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ImageBox.SizeMode">
            <summary>
            Indicates how the image will be positioned and scaled when the
            image and control dimensions are different sizes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ImageBox.ImageChanged">
            <summary>
            Occurs when the control's image is changed.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ImageBox.SizeModeChanged">
            <summary>
            Occurs when the control's size mode is changed.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ComboBox">
            <summary>
            Represents a combo box control with a drop-down list of selectable items.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ComboBox.btnDown">
            <summary>
            Drop-down button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ComboBox.items">
            <summary>
            List of selectable entries that compose the drop-down list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ComboBox.lstCombo">
            <summary>
            List box control of the combo box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ComboBox.maxItems">
            <summary>
            Maximum number of entries in the combo box's drop-down list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ComboBox.drawSelection">
            <summary>
            Indicates whether the selected index should be drawn. ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new combo box control.
            </summary>
            <param name="manager">GUI manager for the combo box control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the combo box control.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.Init">
            <summary>
            Initializes the combo box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.InitSkin">
            <summary>
            Initializes the skin of the combo box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the combo box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles the resize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.btnDown_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles the click event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.Input_MouseDown(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles the mouse button down event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.lstCombo_Click(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles a click on the drop-down list of the combo box control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.OnKeyDown(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles a key down event for the combo box control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.OnGamePadDown(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the combo box control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse down event for the combo box control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.OnMaxItemsChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles additions/removals to/from the combo box list control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.OnItemIndexChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles list item index changed events for the combo box control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.lstCombo_FocusLost(System.Object,TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles the focus lost event for a combo box's list control.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ComboBox.AdjustMargins">
            <summary>
            Adjusts the margins of the client area of the combo box control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ComboBox.ReadOnly">
            <summary>
            Indicates if the combo box's text box control is read-only or not.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ComboBox.DrawSelection">
            <summary>
            Indicates if the selection image should be drawn on the drop-down list control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ComboBox.Items">
            <summary>
            Gets the combo box's drop-down list contents.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ComboBox.MaxItems">
            <summary>
            Gets or sets the number of selections in the drop-down list.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ComboBox.ItemIndex">
            <summary>
            Gets or sets the index of the selected item.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ComboBox.MaxItemsChanged">
            <summary>
            Occurs when the number of selections in the drop-down list changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ComboBox.ItemIndexChanged">
            <summary>
            Occurs when the index of the selected item changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ListBox">
            <summary>
            Represents a list box control. Single selection only. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.items">
            <summary>
            List of selectable items for the list box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.sbVert">
            <summary>
            List box's vertical scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.pane">
            <summary>
            List pane where collection items are displayed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.itemIndex">
            <summary>
            Index of the selected item of the list box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.hotTrack">
            <summary>
            Indicates if mouse over events update the selected index.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.itemsCount">
            <summary>
            Number of items in the list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ListBox.hideSelection">
            <summary>
            Indicates if the selection overlay should be drawn over the selected item.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new ListBox control.
            </summary>
            <param name="manager">GUI manager for the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.Init">
            <summary>
            Initializes the list box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.AutoHeight(System.Int32)">
            <summary>
            Sizes the list pane so the specified number of items will be able to be
            displayed in it without needing a scroll bar.
            </summary>
            <param name="maxItems">Number of items that can be displayed without needing a scroll bar.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the list box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the control will be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.DrawPane(System.Object,TomShane.Neoforce.Controls.DrawEventArgs)">
            <summary>
            Draws the list pane containing the collection items.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the list box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.TrackItem(System.Int32,System.Int32)">
            <summary>
            Updates the list box selection when the mouse moves over one.
            </summary>
            <param name="x">Mouse X position.</param>
            <param name="y">Mouse Y position.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnMouseMove(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse move events for the list box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnKeyPress(TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the list box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnGamePadPress(TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button presses for the list box. Specifically, the up and down buttons.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.ItemsChanged">
            <summary>
            Updates scroll bar values based on font size, list box size, and the number of collection items.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing of the list box. 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.ScrollTo(System.Int32)">
            <summary>
            Adjusts the scroll bar value to make sure the 
            specified list item is visible in the list box.
            </summary>
            <param name="index">Index to scroll to.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the list box and watches for changes in list size.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnItemIndexChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Raises the ItemIndexChangedEvent.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnHotTrackChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Raises the HotTrackChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnHideSelectionChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Raises the HideSelectionChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ListBox.OnMouseScroll(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse scroll events for the list box.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ListBox.Items">
            <summary>
            Gets the list of items.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ListBox.HotTrack">
            <summary>
            Indicates if mouse over event can update the selected index.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ListBox.ItemIndex">
            <summary>
            Gets or sets the index of the selected list box item.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ListBox.HideSelection">
            <summary>
            Indicates if the selection overlay should be drawn over the selected item.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ListBox.HotTrackChanged">
            <summary>
            Occurs when the hot tracking value changes.
            </summary>     
        </member>
        <member name="E:TomShane.Neoforce.Controls.ListBox.ItemIndexChanged">
            <summary>
            Occurs when the selected item index changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ListBox.HideSelectionChanged">
            <summary>
            Occurs when the hide selection value changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GroupBoxType">
            <summary>
            Defines how the GroupBox looks when rendered.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GroupBox">
            <summary>
            Represents a container used to group together related controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GroupBox.type">
            <summary>
            Defines the rendered look of the group box.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GroupBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new GroupBox container control.
            </summary>
            <param name="manager">GUI manager for the group box.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GroupBox.Init">
            <summary>
            Initializes the group box control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GroupBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the group box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the group box should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.GroupBox.Type">
            <summary>
            Gets or sets the group box type.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.EventArgs">
            <summary>
            Base object for Neoforce events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.EventArgs.Handled">
            <summary>
            Indicates if the event the arguments belong with
            has been handled or not.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.EventArgs.#ctor">
            <summary>
            Creates a new EventArgs instance.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.KeyEventArgs">
            <summary>
            Event arguments for keyboard related events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyEventArgs.Key">
            <summary>
            Key for the event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyEventArgs.Control">
            <summary>
            Indicates if the Control key modifier is pressed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyEventArgs.Shift">
            <summary>
            Indicates if the Shift key modifier is pressed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyEventArgs.Alt">
            <summary>
            Indicates if the Alt key modifier is pressed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.KeyEventArgs.Caps">
            <summary>
            Indicates if Caps Lock key is enabled.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.KeyEventArgs.#ctor">
            <summary>
            Creates a new instance of the KeyEventArgs class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.KeyEventArgs.#ctor(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Creates a new instance of the KeyEventArgs class for the specified key.
            </summary>
            <param name="key">Key argument for the event.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.KeyEventArgs.#ctor(Microsoft.Xna.Framework.Input.Keys,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the KeyEventArgs class for the specified key and modifiers.
            </summary>
            <param name="key">Key argument for the event.</param>
            <param name="control">Indicates if the Control key modifier is pressed.</param>
            <param name="shift">Indicates if the Shift key modifier is pressed.</param>
            <param name="alt">Indicates if the Alt key modifier is pressed.</param>
            <param name="caps">Indicates if Caps Lock is enabled.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MouseEventArgs">
            <summary>
            Event arguments for mouse related events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MouseEventArgs.State">
            <summary>
            Mouse state at the time of the event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MouseEventArgs.Button">
            <summary>
            Mouse button state at the time of the event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MouseEventArgs.Position">
            <summary>
            Mouse cursor position.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MouseEventArgs.Difference">
            <summary>
            Mouse cursor position delta.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MouseEventArgs.ScrollDirection">
            <summary>
            Mouse scroll direction
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TomShane.Neoforce.Controls.MouseEventArgs.#ctor(Microsoft.Xna.Framework.Input.MouseState,TomShane.Neoforce.Controls.MouseButton,Microsoft.Xna.Framework.Point,TomShane.Neoforce.Controls.MouseScrollDirection)" -->
        <member name="T:TomShane.Neoforce.Controls.GamePadEventArgs">
            <summary>
            Event arguments for gamepad related events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadEventArgs.PlayerIndex">
            <summary>
            Index of the player the gamepad is associated with. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadEventArgs.State">
            <summary>
            State of the gamepad at the time of the event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadEventArgs.Button">
            <summary>
            Gamepad button pressed for the event arguments.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadEventArgs.Vectors">
            <summary>
            Values of the gamepad sticks and trigs.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GamePadEventArgs.#ctor(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Creates a new instance of the GamePadEventArgs class for the specified player.
            </summary>
            <param name="playerIndex">Player index of the gamepad.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.GamePadEventArgs.#ctor(Microsoft.Xna.Framework.PlayerIndex,TomShane.Neoforce.Controls.GamePadButton)">
            <summary>
            Creates a new instance of the GamePadEventArgs class for the specified player.
            </summary>
            <param name="playerIndex">Player index of the gamepad.</param>
            <param name="button">Button pressed for the event.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.DrawEventArgs">
            <summary>
            Event arguments for draw related events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DrawEventArgs.Renderer">
            <summary>
            Rendering object for the draw event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DrawEventArgs.Rectangle">
            <summary>
            Destination region where drawing will occur.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DrawEventArgs.GameTime">
            <summary>
            Snapshot of the application's timing values.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.DrawEventArgs.#ctor">
            <summary>
            Creates a new default instance of the DrawEventArgs class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.DrawEventArgs.#ctor(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Creates an initialized instance of the DrawEventArgs class.
            </summary>
            <param name="renderer">Render management object for the event.</param>
            <param name="rectangle">Destination region where drawing will occur.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ResizeEventArgs">
            <summary>
            Event arguments for resize related events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ResizeEventArgs.Width">
            <summary>
            New width of the object being resized.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ResizeEventArgs.Height">
            <summary>
            New height of the object being resized.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ResizeEventArgs.OldWidth">
            <summary>
            Previous width of the object being resized.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ResizeEventArgs.OldHeight">
            <summary>
            Previous height of the object being resized.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ResizeEventArgs.#ctor">
            <summary>
            Creates a new default instance of the ResizeEventArgs class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ResizeEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an initialized instance of the ResizeEventArgs class.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="oldWidth"></param>
            <param name="oldHeight"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MoveEventArgs">
            <summary>
            Event arguments for move/drag releated events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MoveEventArgs.Left">
            <summary>
            Current X position of the object being moved.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MoveEventArgs.Top">
            <summary>
            Current Y position of the object being moved.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MoveEventArgs.OldLeft">
            <summary>
            Previous X position of the object being moved.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.MoveEventArgs.OldTop">
            <summary>
            Previous Y position of the object being moved.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MoveEventArgs.#ctor">
            <summary>
            Creates a default instance of the MoveEventArgs class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.MoveEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates an initialized instance of the MoveEventArgs class.
            </summary>
            <param name="left">Current X position of the object being moved.</param>
            <param name="top">Current Y position of the object being moved.</param>
            <param name="oldLeft">Previous X position of the object being moved.</param>
            <param name="oldTop">Previous Y position of the object being moved.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.DeviceEventArgs">
            <summary>
            Event arguments for creating a new graphics device
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DeviceEventArgs.DeviceSettings">
            <summary>
            Arguments for the graphics manager PreparingDeviceSettings event.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.DeviceEventArgs.#ctor">
            <summary>
            Creates a default instance of the DeviceEventArgs class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.DeviceEventArgs.#ctor(Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs)">
            <summary>
            Creates an initialized instance of the DeviceEventArgs class.
            </summary>
            <param name="deviceSettings">Arguments for the graphics manager PreparingDeviceSettings event.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.WindowClosingEventArgs">
            <summary>
            Event arguments for window closing event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.WindowClosingEventArgs.Cancel">
            <summary>
            Indicates if the window closing operation should be canceled. 
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.WindowClosingEventArgs.#ctor">
            <summary>
            Creates a new instance of the WindowClosingEventArgs class.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.WindowClosedEventArgs">
            <summary>
            Event arguments for window closed events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.WindowClosedEventArgs.Dispose">
            <summary>
            Indicates if the unmanaged window resources should be released.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.WindowClosedEventArgs.#ctor">
            <summary>
            Creates a new instance of the WindowClosedEventArgs class.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ConsoleMessageEventArgs">
            <summary>
            Event arguments for console message events.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ConsoleMessageEventArgs.Message">
            <summary>
            Console message for this event.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ConsoleMessageEventArgs.#ctor">
            <summary>
            Creates a default instance of the ConsoleMessageEventArgs class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ConsoleMessageEventArgs.#ctor(TomShane.Neoforce.Controls.ConsoleMessage)">
            <summary>
            Creates an initialized instance of the ConsoleMessageEventArgs class.
            </summary>
            <param name="message">Console message for the event.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ScrollBar">
            <summary>
            Represents a horizontal or vertical scroll bar control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.range">
            <summary>
            Maximum value of the scroll bar control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.value">
            <summary>
            Current value of the scroll bar control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.pageSize">
            <summary>
            Increment used for large changes to the scroll bar value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.stepSize">
            <summary>
            Increment used for small changes to the scroll bar value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.orientation">
            <summary>
            Indicates if the control is a horizontal or vertical scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.btnMinus">
            <summary>
            Button used to decrease the value of the scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.btnPlus">
            <summary>
            Button used to increase the value of the scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.btnSlider">
            <summary>
            Button indicating the current value of the scroll bar that the user 
            can drag up/down or left/right to scroll.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.strButton">
            <summary>
            String for accessing the resource used to draw the scroll bar plus and 
            minus buttons.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.strRail">
            <summary>
            String for accessing the resource used to draw the rail that the slider 
            button moves on.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.strSlider">
            <summary>
            String for accessing the resource used to draw the scroll bar slider button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.strGlyph">
            <summary>
            String for accessing the glyph displayed on the scroll bar slider button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.strMinus">
            <summary>
            String for accessing the Arrow Up glyph for the scroll bar.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ScrollBar.strPlus">
            <summary>
            String for accessing the Arrow Down glyph for the scroll bar.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.#ctor(TomShane.Neoforce.Controls.Manager,TomShane.Neoforce.Controls.Orientation)">
            <summary>
            Creates a new ScrollBar control.
            </summary>
            <param name="manager">GUI manager for the scroll bar.</param>
            <param name="orientation">Indicates if the scroll bar is horizontal or vertical.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.Init">
            <summary>
            Initializes the scroll bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.InitSkin">
            <summary>
            Initializes the skin for the scroll bar control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the scroll bar control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination region where the scroll bar should be drawn.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.ArrowPress(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles click events for plus and minus button controls.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnResize(TomShane.Neoforce.Controls.ResizeEventArgs)">
            <summary>
            Handles resizing the scroll bar control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.RecalcParams">
            <summary>
            Adjusts the sizes and positions of all buttons based on scroll bar orientation, dimensions, and value.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.btnSlider_Move(System.Object,TomShane.Neoforce.Controls.MoveEventArgs)">
            <summary>
            Handles movement of the slider button.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnMouseUp(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button up events for the scroll bar.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnMouseDown(TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Handles mouse button down events for the scroll bar.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnValueChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles scroll bar value changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnRangeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the scroll bar's range.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnPageSizeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the scroll bar's page size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ScrollBar.OnStepSizeChanged(TomShane.Neoforce.Controls.EventArgs)">
            <summary>
            Handles changes in the scroll bar's step size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ScrollBar.Value">
            <summary>
            Gets or sets the current value of the scroll bar.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ScrollBar.Range">
            <summary>
            Gets or sets the maximum value of the scroll bar.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ScrollBar.PageSize">
            <summary>
            Gets or sets the increment the scroll bar value changes for large increments.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ScrollBar.StepSize">
            <summary>
            Gets or sets the increment the scroll bar value changes for small increments.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ScrollBar.ValueChanged">
            <summary>
            Occurs when the value of the scroll bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ScrollBar.RangeChanged">
            <summary>
            Occurs when the range of the scroll bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ScrollBar.StepSizeChanged">
            <summary>
            Occurs when the step size of the scroll bar changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.ScrollBar.PageSizeChanged">
            <summary>
            Occurs when the page size of the scroll bar changes.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.TextBoxMode">
            <summary>
            Specifies the type of text box.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBoxMode.Normal">
            <summary>
            Standard text box control. Single line. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBoxMode.Password">
            <summary>
            Masked text box control. Input is replaced by the control's password character.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.TextBoxMode.Multiline">
            <summary>
            Multi-line text box control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.BlendingMode">
            <summary>
            Specifies the blend mode that will be used when the renderer draws objects.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.BlendingMode.Default">
            <summary>
            The renderer will draw with the default blend settings.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.BlendingMode.None">
            <summary>
            The renderer will draw in overwrite mode.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.DeviceStates">
            <summary>
            Contains state information for the GraphicsDevice.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DeviceStates.BlendState">
            <summary>
            Graphics device blend state information.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DeviceStates.RasterizerState">
            <summary>
            Indicates how the graphics device converts vector data into raster data.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DeviceStates.DepthStencilState">
            <summary>
            Graphics device depth stencil state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.DeviceStates.SamplerState">
            <summary>
            Indicates how the graphics device samples texture data.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.DeviceStates.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Renderer">
            <summary>
            Provides methods for drawing control layers and strings.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Renderer.sb">
            <summary>
            Sprite batch object used for drawing.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Renderer.states">
            <summary>
            Various graphics device settings for the renderer.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new renderer.
            </summary>
            <param name="manager">GUI manager for creating the sprite batch.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Dispose(System.Boolean)">
            <summary>
            Cleans up resources used by the renderer.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Init">
            <summary>
            Initializes the renderer.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Begin(TomShane.Neoforce.Controls.BlendingMode)">
            <summary>
            Begins drawing batched objects.
            </summary>
            <param name="mode">Specify BlendingMode.None will begin drawing in overwrite mode.
            BlendingMode.Default will begin drawing using the default blend state settings.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.End">
            <summary>
            Ends drawing of batched objects.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws the texture in the specified region.
            </summary>
            <param name="texture">Image to draw.</param>
            <param name="destination">Destination region where the image will be drawn.</param>
            <param name="color">Color tint to apply to the image.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws the specified region of the texture in the specified location.
            </summary>
            <param name="texture">Image to draw.</param>
            <param name="destination">Destination region where the image will be drawn.</param>
            <param name="source">Source region of the texture to draw.</param>
            <param name="color">Color tint to apply to the image.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws the texture at the specified location.
            </summary>
            <param name="texture">Image to draw.</param>
            <param name="left">Destination X position.</param>
            <param name="top">Destination Y position.</param>
            <param name="color">Color tint to apply to the image.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.Draw(Microsoft.Xna.Framework.Graphics.Texture2D,System.Int32,System.Int32,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws the specified region of the texture at the specified location.
            </summary>
            <param name="texture">Image to draw.</param>
            <param name="left">Destination X position.</param>
            <param name="top">Destination Y position.</param>
            <param name="source">Source region of the image to draw.</param>
            <param name="color">Color tint to apply to the image.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            Draws a string at the specified location.
            </summary>
            <param name="font">Sprite font used for drawing text.</param>
            <param name="text">Text to draw.</param>
            <param name="left">Starting X position of the text.</param>
            <param name="top">Starting Y position of the text.</param>
            <param name="color">Color of the text.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,TomShane.Neoforce.Controls.Alignment,System.Boolean)">
            <summary>
            Draws a string aligned within the specified region.
            </summary>
            <param name="font">Sprite font used for drawing text.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="color">Color of the text.</param>
            <param name="alignment">Indicates how the text is aligned within the destination region.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,TomShane.Neoforce.Controls.Alignment,System.Boolean,System.Boolean)">
            <summary>
            Draw a string aligned within the specified region.
            </summary>
            <param name="font">Sprite font used for drawing text.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="color">Color of the text.</param>
            <param name="alignment">Indicates how the text is aligned within the destination region.</param>
            <param name="ellipsis">Indicates if text that doesn't fit within the specified region should be truncated with "..."</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean)">
            <summary>
            Draws a string in the region on the specified layer of the control.
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.ControlState,System.Boolean)">
            <summary>
            Draws a string in the region on the specified layer of the control. 
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="state">Defines the control state used when drawing.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Draws a string in the region on the specified layer of the control.
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="margins">Respect the control margins when positioning text?</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.ControlState,System.Boolean,System.Boolean)">
            <summary>
            Draws the text in the supplied region on the specified layer of the control.
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="state">Control state to grab text color information from.</param>
            <param name="margins">Respect the control margins when positioning text?</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws the text in the supplied region on the specified layer of the control.
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="margins">Respect the margins of the control when positioning text?</param>
            <param name="ox">X offset to apply when positioning text in the defined region.</param>
            <param name="oy">Y offset to apply when positioning text in the defined region.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.ControlState,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws the text in the supplied region on the specified layer of the control.
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="state">Control state to get the text color from.</param>
            <param name="margins">Respect the margins of the control when positioning text?</param>
            <param name="ox">X offset to apply when positioning text in the defined region.</param>
            <param name="oy">Y offset to apply when positioning text in the defined region.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws the text in the supplied region on the specified layer of the control.
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="margins">Respect the margins of the control when positioning text?</param>
            <param name="ox">X offset to apply when positioning text in the defined region.</param>
            <param name="oy">Y offset to apply when positioning text in the defined region.</param>
            <param name="ellipsis">Indicates if text that doesn't fit in the specified region should be truncated with "..."</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,System.String,Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.ControlState,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws the text in the supplied region on the specified layer of the control
            </summary>
            <param name="control">Control to draw the text on.</param>
            <param name="layer">Control layer to draw the text on.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="state">Control state to get the text color from.</param>
            <param name="margins">Respect the control margins when positioning text?</param>
            <param name="ox">X offset to apply when positioning text in the defined region.</param>
            <param name="oy">Y offset to apply when positioning text in the defined region.</param>
            <param name="ellipsis">Indicates if text that doesn't fit in the specified region should be truncated with "..."</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawString(Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,TomShane.Neoforce.Controls.Alignment,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws text in the specified region.
            </summary>
            <param name="font">Sprite font used for drawing text.</param>
            <param name="text">Text to draw.</param>
            <param name="rect">Destination region where text should be drawn.</param>
            <param name="color">Color of the text.</param>
            <param name="alignment">Indicates how the text is aligned within the destination region.</param>
            <param name="offsetX">X offset to apply when positioning the text in the defined region.</param>
            <param name="offsetY">Y offset to apply when positioning the text in the defined region.</param>
            <param name="ellipsis">Indicates if text that doesn't fit within the specified region should be truncated with "..."</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.GetTextCenter(System.Single,System.Single)">
            <summary>
            Gets the center point of text within a container.
            </summary>
            <param name="size1">Size of the container the text will be in.</param>
            <param name="size2">Size of the text itself.</param>
            <returns>Returns the center point of the text.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawLayer(TomShane.Neoforce.Controls.SkinLayer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Int32)">
            <summary>
            Draws a skin layer in the specified region.
            </summary>
            <param name="layer">Skin layer to draw.</param>
            <param name="rect">Destination region where the layer will be drawn.</param>
            <param name="color">Color tint to apply to the skin layer.</param>
            <param name="index">Index of the skin layer state to draw.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.GetSourceArea(TomShane.Neoforce.Controls.Size,TomShane.Neoforce.Controls.Size,TomShane.Neoforce.Controls.Margins,TomShane.Neoforce.Controls.Alignment,System.Int32)">
            <summary>
            Used to grab a piece of the source region of a skin resource 
            when multiple assets are packed into a single image file.
            </summary>
            <param name="imageSize">Size of the entire image.</param>
            <param name="partSize">Size of the asset piece to retrieve the source region for.</param>
            <param name="margins">???</param>
            <param name="alignment">???</param>
            <param name="index">Index specifying where on the source image, the asset we want is located.</param>
            <returns>Returns a rectangle that specifies the location and size of the asset that was requested.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.GetDestinationArea(Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.Margins,TomShane.Neoforce.Controls.Alignment)">
            <summary>
            Calculates the correct piece of the destination region where the partial source area should be drawn.
            </summary>
            <param name="area">Entire destination region where the image should be drawn.</param>
            <param name="margins">Margin values applied to the region.</param>
            <param name="alignment">Which piece of the asset is this?</param>
            <returns>The region where the partial source piece should be drawn.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawGlyph(TomShane.Neoforce.Controls.Glyph,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws a glyph. (An image on a control.)
            </summary>
            <param name="glyph">Glyph to draw.</param>
            <param name="rect">Destination region where the glyph will be drawn.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawLayer(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws the specified layer of the control in the defined region.
            </summary>
            <param name="control">Control to draw the layer of.</param>
            <param name="layer">Skin layer of the control to draw.</param>
            <param name="rect">Destination region where the control layer will be drawn.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Renderer.DrawLayer(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.SkinLayer,Microsoft.Xna.Framework.Rectangle,TomShane.Neoforce.Controls.ControlState)">
            <summary>
            Draws the specified layer of the control in the defined region.
            </summary>
            <param name="control">Control to draw the layer of.</param>
            <param name="layer">Skin layer of the control to draw.</param>
            <param name="rect">Destination region where the control layer will be drawn.</param>
            <param name="state">Control state to apply to the layer.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Renderer.SpriteBatch">
            <summary>
            Accesses the renderer's sprite batch object.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ClipBox">
            <summary>
            ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipBox.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new clip box control.
            </summary>
            <param name="manager">GUI manager for the clip box control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ClipBox.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the clip box control.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.NativeMethods">
            <summary>
            Imports a few native functions we need.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputMethods">
            <summary>
            Defines the input devices a Neoforce Application supports.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.MouseButton">
            <summary>
            Identifies a particular button on a mouse.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GamePadButton">
            <summary>
            Identifies a particular button on an Xbox 360 gamepad.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ActivePlayer">
            <summary>
            Identifies the index of the player who has input focus.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.GamePadVectors">
            <summary>
            Stores the thumb stick and trigger values of a gamepad.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadVectors.LeftStick">
            <summary>
            Left thumb stick axis values.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadVectors.RightStick">
            <summary>
            Right thumb stick axis values.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadVectors.LeftTrigger">
            <summary>
            Left trigger value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.GamePadVectors.RightTrigger">
            <summary>
            Right trigger value.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputOffset">
            <summary>
            Defines the input offset and ratio to use when rescaling controls in the render target.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputOffset.X">
            <summary>
            Mouse position X offset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputOffset.Y">
            <summary>
            Mouse position Y offset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputOffset.RatioX">
            <summary>
            Target Width / Actual Screen Width.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputOffset.RatioY">
            <summary>
            Target Height / Actual Screen Height.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputOffset.#ctor(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of the InputOffset class.
            </summary>
            <param name="x">Mouse position X offset.</param>
            <param name="y">Mouse position Y offset.</param>
            <param name="rx">X ratio.</param>
            <param name="ry">Y ratio.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputSystem">
            <summary>
            Defines the input system for a Neoforce application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.RepeatDelay">
            <summary>
            Indicates how much delay (in ms) there will be before a key/button
            will register a repeated press event when held down.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.RepeatRate">
            <summary>
            Indicates how much delay (in ms) there will be between repeated key/button
            press events after the initial RepeatDelay timer has expired. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.ClickThreshold">
            <summary>
            Indicates how far a thumbstick must be moved from center position to register 
            an action. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.window">
            <summary>
            The focused form of the application when running on Windows.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.keys">
            <summary>
            List to track the state and repeat timers of all keyboard keys.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.mouseButtons">
            <summary>
            List to track the state and repeat timers of all mouse buttons.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.gamePadButtons">
            <summary>
            List to track the state and repeat timers of all gamepad buttons.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.mouseState">
            <summary>
            Current mouse state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.gamePadState">
            <summary>
            Current gamepad state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.manager">
            <summary>
            Application's GUI manager.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.inputOffset">
            <summary>
            Input offset and ratio to use when rescaling controls in the render target.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.inputMethods">
            <summary>
            Specifies what input devices can be used to navigate the application's controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.activePlayer">
            <summary>
            Index of the player with input focus over the application.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.#ctor(TomShane.Neoforce.Controls.Manager,TomShane.Neoforce.Controls.InputOffset)">
            <summary>
            Creates the Input System.
            </summary>
            <param name="manager">Application's GUI manager.</param>
            <param name="offset">???</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates the Input System
            </summary>
            <param name="manager">Application's GUI manager.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.Initialize">
            <summary>
            Initializes the input system.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.SendMouseState(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the current mouse state using the supplied arguments.
            </summary>
            <param name="state">Mouse state to use to update the current mouse state.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.SendKeyboardState(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the current keyboard state with the supplied arguments.
            </summary>
            <param name="state">Keyboard state used to update the current state of the keyboard.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.SendGamePadState(Microsoft.Xna.Framework.PlayerIndex,Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the specified gamepad using the supplied arguments.
            </summary>
            <param name="playerIndex">PlayerIndex of the gamepad to update.</param>
            <param name="state">Gamepad state to use to update the current gamepad state values.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of supported input devices.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.GetVectorState(TomShane.Neoforce.Controls.GamePadButton,Microsoft.Xna.Framework.Input.GamePadState)">
            <summary>
            Checks the specified thumbstick or trigger button and returns its ButtonState.
            </summary>
            <param name="button">Left/Right thumbstick direction or trigger button to get the state of.</param>
            <param name="state">Gamepad state to check the specified button on.</param>
            <returns>Returns ButtonState.Pressed if the value of the specified button exceeds the ClickThreshold value;
            otherwise it returns ButtonState.Released.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.UpdateGamePad(Microsoft.Xna.Framework.PlayerIndex,Microsoft.Xna.Framework.Input.GamePadState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the gamepad with the specified player index and raises 
            applicable gamepad events as needed.
            </summary>
            <param name="playerIndex">PlayerIndex of the gamepad to update the state of.</param>
            <param name="state">The new state to assign to the gamepad.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.BuildGamePadEvent(Microsoft.Xna.Framework.Input.GamePadState,TomShane.Neoforce.Controls.GamePadButton,TomShane.Neoforce.Controls.GamePadEventArgs@)">
            <summary>
            Updates the GamePadEventArgs with the specified button, stick and trigger values.
            </summary>
            <param name="state">Current gamepad state to grab stick and trigger values from.</param>
            <param name="button">Gamepad button to assign to the event args.</param>
            <param name="e">GamePadEventArgs to update with the supplied values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.UpdateKeys(Microsoft.Xna.Framework.Input.KeyboardState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the keys in the list.
            </summary>
            <param name="state">Current keyboard state.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.RecalcPosition(Microsoft.Xna.Framework.Point)">
            <summary>
            Adjusts the mouse position to account for rescaling on the render target.
            </summary>
            <param name="pos">Original mouse position.</param>
            <returns>Returns the adjusted mouse position.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.AdjustPosition(TomShane.Neoforce.Controls.MouseEventArgs@)">
            <summary>
            Adjusts the position of the mouse cursor to keep it within the client region of the window.
            </summary>
            <param name="e">Mouse event arguments.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.UpdateMouse(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the mouse device.
            </summary>
            <param name="state">Current mouse state.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.UpdateButtons(Microsoft.Xna.Framework.Input.MouseState,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the state of the Mouse buttons.
            </summary>
            <param name="state">Current state of the mouse device.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.InputSystem.InputOffset">
            <summary>
            Sets or gets input offset and ratio when rescaling controls in render target.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.InputSystem.InputMethods">
            <summary>
            Sets or gets input methods allowed for navigation.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.InputSystem.ActivePlayer">
            <summary>
            Gets or sets the index of the player who has input focus.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.KeyDown">
            <summary>
            Occurs when a key enters the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.KeyPress">
            <summary>
            Occurs after a key down event and also occurs for repeat key press events.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.KeyUp">
            <summary>
            Occurs when a key leaves the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.MouseDown">
            <summary>
            Occurs when a mouse button enters the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.MousePress">
            <summary>
            Occurs after a mouse down event and occurs for repeat mouse press events. 
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.MouseUp">
            <summary>
            Occurs when a mouse button leaves the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.MouseMove">
            <summary>
            Occurs when the mouse is moved.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.GamePadUp">
            <summary>
            Occurs when a gamepad button leaves the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.GamePadDown">
            <summary>
            Occurs when a gamepad button enters the pressed state.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.GamePadPress">
            <summary>
            Occurs after a gamepad down event and occurs for repeat button press events.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.GamePadMove">
            <summary>
            Occurs when the values of the gamepad thumb sticks change.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.InputSystem.MouseScroll">
            <summary>
            Occurs when the mouse is scrolled.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputSystem.InputKey">
            <summary>
            Represents a key, its state, and repeat delay timer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputKey.Key">
            <summary>
            Key that this object represents.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputKey.Pressed">
            <summary>
            Indicates if the key is pressed or released.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputKey.Countdown">
            <summary>
            Timer used to delay firing of repeat key presses.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputSystem.InputMouseButton">
            <summary>
            Represents a mouse button, its state, and repeat delay timer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputMouseButton.Button">
            <summary>
            The mouse button this object represents.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputMouseButton.Pressed">
            <summary>
            Indicates if the button is pressed or released.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputMouseButton.Countdown">
            <summary>
            Timer to delay the firing of repeat click events.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.InputMouseButton.#ctor">
            <summary>
            Creates a default instance of the InputMouseButton class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.InputMouseButton.#ctor(TomShane.Neoforce.Controls.MouseButton)">
            <summary>
            Creates an instance of the InputMouseButton class set for the specified mouse button.
            </summary>
            <param name="button">Mouse button this instance will represent.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputSystem.InputMouse">
            <summary>
            Represents the state of the mouse device and the current mouse cursor position.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputMouse.State">
            <summary>
            Current mouse state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputMouse.Position">
            <summary>
            Current mouse cursor position.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.InputSystem.InputGamePadButton">
            <summary>
            Represents a gamepad button, its state, and repeat delay timer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputGamePadButton.Button">
            <summary>
            Gamepad button this object represents.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputGamePadButton.Pressed">
            <summary>
            Indicates if the button is pressed or released.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.InputSystem.InputGamePadButton.Countdown">
            <summary>
            Delay timer for firing repeat button presses.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.InputGamePadButton.#ctor">
            <summary>
            Creates a default instance of the InputGamePadButton class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.InputSystem.InputGamePadButton.#ctor(TomShane.Neoforce.Controls.GamePadButton)">
            <summary>
            Creates an InputGamePadButton instance for the specified button.
            </summary>
            <param name="button">Button this instance will represent.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Label">
            <summary>
            Represents a Label control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Label.alignment">
            <summary>
            Indicates how the label's text is aligned.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Label.ellipsis">
            <summary>
            Indicates if the text should be truncated with "..."
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Label.font">
            <summary>
            Size of the font
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Label.#ctor(TomShane.Neoforce.Controls.Manager)">
            <summary>
            Creates a new label control.
            </summary>
            <param name="manager">GUI management object for the label control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Label.Init">
            <summary>
            Initializes the label control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Label.InitSkin">
            <summary>
            Initializes the skin
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Label.DrawControl(TomShane.Neoforce.Controls.Renderer,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the label control in the specified region.
            </summary>
            <param name="renderer">Render management object.</param>
            <param name="rect">Destination rectangle where drawing takes place.</param>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Label.Alignment">
            <summary>
            Indicates how the label's text is aligned.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Label.Bold">
            <summary>
            Indicates if the font should be bold
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Label.Ellipsis">
            <summary>
            Indicates if the label's text should be truncated with "..." if it's too large.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.FontSize">
            <summary>
            Font size (Name = Size)
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Manager">
            <summary>
            Manages rendering of all controls.
            </summary>  
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._SkinDirectory">
            <summary>
            Directory in the content project where the manager expects to find skin files.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._LayoutDirectory">
            <summary>
            Directory in the content project where the manager expects to find layout files.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._DefaultSkin">
            <summary>
            Name of the default skin file asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._SkinExtension">
            <summary>
            Extension of valid skin file archives.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._MenuDelay">
            <summary>
            Amount of milliseconds to delay the initial display of menus.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._ToolTipDelay">
            <summary>
            Amount of milliseconds the mouse cursor has to hover a control before its tool 
            tip is displayed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._DoubleClickTime">
            <summary>
            Maximum delay between two click events. Two clicks occuring within this limit 
            will be interpreted as a double click event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._TextureResizeIncrement">
            <summary>
            Increment at which a texture can be resized.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._RenderTargetUsage">
            <summary>
            Indicates how the manager's render target data is used when a new render target is set.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._SkinVersion">
            <summary>
            Skin version the manager expects to work with.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager._LayoutVersion">
            <summary>
            Layout file version the manager expects to work with.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.window">
            <summary>
            Application's windows form when running on Windows.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.cursor">
            <summary>
            Application's cursor used when running on Windows.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.deviceReset">
            <summary>
            Indicates if the graphics device has been reset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.renderTarget">
            <summary>
            Render target where control drawing takes place before being displayed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.targetFrames">
            <summary>
            Application's target FPS.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.drawTime">
            <summary>
            Tracks elapsed time to control drawing to match target FPS.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.updateTime">
            <summary>
            Tracks elapsed time to control frequency of updates.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.graphics">
            <summary>
            Graphics device manager for the application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.content">
            <summary>
            Archive content manager for loading skin files.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.renderer">
            <summary>
            Render manager for the application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.input">
            <summary>
            Handles input device updates for the application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.inputEnabled">
            <summary>
            Indicates if the manager is responding to user input.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.components">
            <summary>
            List of all components being managed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.controls">
            <summary>
            List of all controls being managed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.orderList">
            <summary>
            List of visible controls in the controls list.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.skin">
            <summary>
            Current skin being applied to the application controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.skinName">
            <summary>
            Name of the skin file being used.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.layoutDirectory">
            <summary>
            Directory where layout files are located.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.skinDirectory">
            <summary>
            Directory where skin files are located.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.skinExtension">
            <summary>
            Extension of skin files. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.focusedControl">
            <summary>
            Application control that currently has input focus.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.modalWindow">
            <summary>
            Current modal window displayed, if any.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.globalDepth">
            <summary>
            Global depth value used when drawing controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.toolTipDelay">
            <summary>
            Indicates how long a mouse has to hover a control in order to activate its tool tip.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.toolTipsEnabled">
            <summary>
            Indicates if the application can use tool tips.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.menuDelay">
            <summary>
            Indicates how long the display of a menu is delayed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.doubleClickTime">
            <summary>
            Indicates how fast two click events must occur to trigger a double click event.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.textureResizeIncrement">
            <summary>
            Increment which textures can be resized at.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.logUnhandledExceptions">
            <summary>
            Indicates if unhandled exceptions should be logged to file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.states">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.keyboardLayout">
            <summary>
            Active keyboard layout.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.keyboardLayouts">
            <summary>
            List of keyboard layouts available for the application.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.disposing">
            <summary>
            Indicates if the manager is being disposed.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.useGuide">
            <summary>
            Indicates if the guide component can be used.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.autoUnfocus">
            <summary>
            Indicates if controls automatically unfocus when a new control is navigated to. ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.autoCreateRenderTarget">
            <summary>
            Indicates if the manager's render target should be created automatically when initialized.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.GraphicsDeviceManager,System.String)">
            <summary>
            Initializes a new instance of the Manager class.
            </summary>
            <param name="game">
            The Game class.
            </param>
            <param name="graphics">
            The GraphicsDeviceManager class provided by the Game class.
            </param>
            <param name="skin">
            The name of the skin being loaded at the start.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Window_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Windows form closing event handler when running on windows.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game,System.String)">
            <summary>
            Initializes a new instance of the Manager class.
            </summary>
            <param name="game">The Game class.</param>   
            <param name="skin">The name of the skin being loaded at the start.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game,Microsoft.Xna.Framework.GraphicsDeviceManager)">
            <summary>
            Initializes a new instance of the Manager class, loads the default skin and registers manager in the game class automatically.
            </summary>
            <param name="game">The Game class.</param>
            <param name="graphics">The GraphicsDeviceManager class provided by the Game class.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.#ctor(Microsoft.Xna.Framework.Game)">
            <summary>
            Initializes a new instance of the Manager class, loads the default skin and registers manager in the game class automatically.
            </summary>
            <param name="game">The Game class.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Dispose(System.Boolean)">
            <summary>
            Releases resources used by the manager.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.SetCursor(System.Windows.Forms.Cursor)">
            <summary>
            Changes the window cursor to the specified cursor.
            </summary>
            <param name="cursor">New cursor that the window should use.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.InitSkins">
            <summary>
            Initializes the skin of every single control created.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.InitControls">
            <summary>
            Initializes every single control created.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.SortLevel(TomShane.Neoforce.Controls.ControlsList)">
            <summary>
            
            </summary>
            <param name="cs"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.PrepareGraphicsDevice(System.Object,Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs)">
            <summary>
            Method used as an event handler for the GraphicsDeviceManager.PreparingDeviceSettings event.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.SetMaxSize(TomShane.Neoforce.Controls.Control,System.Int32,System.Int32)">
            <summary>
            Makes sure the specified control does not exceed the specified 
            dimensions and resizes it if necessary.
            </summary>
            <param name="c">Control to check the dimensions of.</param>
            <param name="w">Maximum width of the control.</param>
            <param name="h">Maximum height of the control.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Initialize">
            <summary>
            Initializes the control manager.
            </summary>    
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CreateRenderTarget">
            <summary>
            Creates a render target.
            </summary>
            <returns>Returns the created render target.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CreateRenderTarget(System.Int32,System.Int32)">
            <summary>
            Creates a render target with the specified dimensions.
            </summary>
            <param name="width">Width of the new render target.</param>
            <param name="height">Height of the new render target.</param>
            <returns>Returns the created render target.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.SetSkin(System.String)">
            <summary>
            Sets and loads the new skin.
            </summary>
            <param name="name">
            The name of the skin being loaded.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.SetSkin(TomShane.Neoforce.Controls.Skin)">
            <summary>
            Sets the new skin.
            </summary>
            <param name="skin">
            The skin being set.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.BringToFront(TomShane.Neoforce.Controls.Control)">
            <summary>
            Brings the control to the front of the z-order.
            </summary>
            <param name="control">
            The control being brought to the front.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.SendToBack(TomShane.Neoforce.Controls.Control)">
            <summary>
            Sends the control to the back of the z-order.
            </summary>
            <param name="control">
            The control being sent back.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Called when the manager needs to be updated.
            </summary>
            <param name="gameTime">
            Time elapsed since the last call to Update.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Add(TomShane.Neoforce.Controls.Component)">
            <summary>
            Adds a component or a control to the manager.
            </summary>
            <param name="component">
            The component or control being added.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Remove(TomShane.Neoforce.Controls.Component)">
            <summary>
            Removes a component or a control from the manager.
            </summary>
            <param name="component">
            The component or control being removed.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Prepare(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the controls on their respective render targets.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.BeginDraw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Renders all controls added to the manager.
            </summary>
            <param name="gameTime">
            Time passed since the last call to Draw.
            </param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Draws the manager's controls.
            </summary>
            <param name="gameTime">Snapshot of the application's timing values.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.EndDraw">
            <summary>
            Draws texture resolved from RenderTarget used for rendering.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.EndDraw(Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws texture resolved from RenderTarget to specified rectangle.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.GetControl(System.String)">
            <summary>
            Gets the control with the specified name.
            </summary>
            <param name="name">Name of the control to retrieve.</param>
            <returns>Returns the control with the specified name.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.HandleUnhadledExceptions(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Handles unhandled exceptions.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.GraphicsDevice_DeviceReset(System.Object,System.EventArgs)">
            <summary>
            Recreates the render target when the graphics device is reset.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.LogException(System.Exception)">
            <summary>
            Logs exceptions to files on Windows.
            </summary>
            <param name="e">The exception to log.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CheckParent(TomShane.Neoforce.Controls.Control,Microsoft.Xna.Framework.Point)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CheckState(TomShane.Neoforce.Controls.Control)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CheckOrder(TomShane.Neoforce.Controls.Control,Microsoft.Xna.Framework.Point)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <param name="pos"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CheckDetached(TomShane.Neoforce.Controls.Control)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CheckPosition(TomShane.Neoforce.Controls.Control,Microsoft.Xna.Framework.Point)">
            <summary>
            Determines if the point is within the bounds of the specified control and its parent.
            </summary>
            <param name="control">Control to check against.</param>
            <param name="pos">Point to test for containment in control.</param>
            <returns>Returns true if the point is inside the control and its parent; false otherwise.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.CheckButtons(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.TabNextControl(TomShane.Neoforce.Controls.Control)">
            <summary>
            Tabs to the next control in the list.
            </summary>
            <param name="control">Current control we are tabbing from.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.TabPrevControl(TomShane.Neoforce.Controls.Control)">
            <summary>
            Tabs to the previous control in the list.
            </summary>
            <param name="control">Current control we are tabbing from.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.ProcessArrows(TomShane.Neoforce.Controls.Control,TomShane.Neoforce.Controls.KeyEventArgs,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Processes up/down/left/right inputs for the manager.
            </summary>
            <param name="control">Control to process arrow keys for.</param>
            <param name="kbe">Key event arguments.</param>
            <param name="gpe">Gamepad event arguments.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.MouseDownProcess(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button down events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.MouseUpProcess(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button up events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.MousePressProcess(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse button press events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.MouseMoveProcess(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse move events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.MouseScrollProcess(System.Object,TomShane.Neoforce.Controls.MouseEventArgs)">
            <summary>
            Processes mouse scroll events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.GamePadDownProcess(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button down events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.GamePadUpProcess(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button up events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.GamePadPressProcess(System.Object,TomShane.Neoforce.Controls.GamePadEventArgs)">
            <summary>
            Handles gamepad button presses for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.KeyDownProcess(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key down events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.KeyUpProcess(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key up events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Manager.KeyPressProcess(System.Object,TomShane.Neoforce.Controls.KeyEventArgs)">
            <summary>
            Handles key press events for the manager.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Disposing">
            <summary>
            Gets a value indicating whether Manager is in the process of disposing.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Window">
            <summary>
            Returns the <see cref="T:System.Windows.Forms.Form"/> the game runs in.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Cursor">
            <summary>
            Gets or sets an application cursor.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Game">
            <summary>
            Returns associated <see cref="P:TomShane.Neoforce.Controls.Manager.Game"/> component.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.GraphicsDevice">
            <summary>
            Returns associated <see cref="P:TomShane.Neoforce.Controls.Manager.GraphicsDevice"/>.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Graphics">
            <summary>
            Returns associated <see cref="T:Microsoft.Xna.Framework.GraphicsDeviceManager"/>.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Renderer">
            <summary>
            Returns <see cref="P:TomShane.Neoforce.Controls.Manager.Renderer"/> used for rendering controls.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Content">
            <summary>
            Returns <see cref="T:TomShane.Neoforce.Controls.ArchiveManager"/> used for loading assets.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Input">
            <summary>
            Returns <see cref="T:TomShane.Neoforce.Controls.InputSystem"/> instance responsible for managing user input.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Components">
            <summary>
            Returns list of components added to the manager.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Controls">
            <summary>
            Returns list of controls added to the manager.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.GlobalDepth">
            <summary>
            Gets or sets the depth value used for rendering sprites.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.ToolTipDelay">
            <summary>
            Gets or sets the time that passes before the <see cref="T:TomShane.Neoforce.Controls.ToolTip"/> appears.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.MenuDelay">
            <summary>
            Gets or sets the time that passes before a submenu appears when hovered over menu item.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.DoubleClickTime">
            <summary>
            Gets or sets the maximum number of milliseconds that can elapse between a first click and a second click to consider the mouse action a double-click.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.TextureResizeIncrement">
            <summary>
            Gets or sets texture size increment in pixel while performing controls resizing.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.ToolTipsEnabled">
            <summary>
            Enables or disables showing of tooltips globally.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.LogUnhandledExceptions">
            <summary>
            Enables or disables logging of unhandled exceptions. 
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.InputEnabled">
            <summary>
            Enables or disables input processing.                   
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.RenderTarget">
            <summary>
            Gets or sets render target for drawing.                 
            </summary>    
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.TargetFrames">
            <summary>
            Gets or sets update interval for drawing, logic and input.                           
            </summary>    
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.KeyboardLayouts">
            <summary>
            Gets or sets collection of active keyboard layouts.     
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.UseGuide">
            <summary>
            Gets or sets a value indicating if Guide component can be used
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.AutoUnfocus">
            <summary>
            Gets or sets a value indicating if a control should unfocus if you click outside on the screen.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.AutoCreateRenderTarget">
            <summary>
            Gets or sets a value indicating whether the Manager should create render target automatically.
            </summary>    
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.KeyboardLayout">
            <summary>
            Gets or sets current keyboard layout for proper text inputs.    
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.SkinDirectory">
            <summary>
            Gets or sets the directory where skin files are located.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.LayoutDirectory">
            <summary>
            Gets or sets the directory where layout files are located.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.SkinExtension">
            <summary>
            Gets or sets file extension for archived skin files.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.TargetWidth">
            <summary>
            Gets width of the selected render target in pixels.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.TargetHeight">
            <summary>
            Gets height of the selected render target in pixels.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.ScreenWidth">
            <summary>
            Gets current width of the screen in pixels.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.ScreenHeight">
            <summary>
            Gets current height of the screen in pixels.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.Skin">
            <summary>
            Gets or sets the skin applied to all controls.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.ModalWindow">
            <summary>
            Gets or sets the currently active modal window.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.FocusedControl">
            <summary>
            Gets or sets the currently focused control.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Manager.OrderList">
            <summary>
            Gets the list of visible controls being managed. 
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Manager.DeviceSettingsChanged">
            <summary>
            Occurs when the GraphicsDevice settings are changed.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Manager.SkinChanging">
            <summary>
            Occurs when the skin is about to change.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Manager.SkinChanged">
            <summary>
            Occurs when the skin changes.
            </summary>
        </member>
        <member name="E:TomShane.Neoforce.Controls.Manager.WindowClosing">
            <summary>
            Occurs when game window is about to close.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Manager.ControlStates">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.ControlStates.Buttons">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.ControlStates.Click">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Manager.ControlStates.Over">
            <summary>
            
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SizeMode">
            <summary>
            Specifies how an image is sized and positioned within a control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SizeMode.Normal">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SizeMode.Auto">
            <summary>
            ???
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SizeMode.Centered">
            <summary>
            Image is centered within the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SizeMode.Stretched">
            <summary>
            Image is scaled to fit in the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SizeMode.Fit">
            <summary>
            Image is scaled down but it's aspect ratio stays the same.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SizeMode.Tiled">
            <summary>
            Only Supported by ImageBox
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ButtonMode">
            <summary>
            Specifies how a button reacts to clicks.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ButtonMode.Normal">
            <summary>
            Standard button. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ButtonMode.PushButton">
            <summary>
            Toggle button.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Glyph">
            <summary>
            Represents an image on a button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Glyph.Image">
            <summary>
            The image asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Glyph.SizeMode">
            <summary>
            Specifies how the image is sized on the button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Glyph.Color">
            <summary>
            Color tint to apply to the button.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Glyph.Offset">
            <summary>
            Offset from the button's position where the image will be drawn.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Glyph.SourceRect">
            <summary>
            Source region on the texture where the glyph appears.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Glyph.DestinationRect">
            <summary>
            Destination the glyph will appear on the control
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Glyph.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Creates a new glyph from the specified texture.
            </summary>
            <param name="image">Glyph image asset.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Glyph.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a new glyph from the specified texture.
            </summary>
            <param name="image">Glyph image asset.</param>
            <param name="destRect">Destination the glyph will appear on the control.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ControlsList">
            <summary>
            Defines type used as a controls collection.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ControlsList.#ctor">
            <summary>
            Creates a new ControlsList.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ControlsList.#ctor(System.Int32)">
            <summary>
            Creates a new ControlsList with the specified initial capacity.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ControlsList.#ctor(System.Collections.Generic.IEnumerable{TomShane.Neoforce.Controls.Control})">
            <summary>
            Creates a new ControlsList and populates it with the items from the source collection.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinStates`1">
            <summary>
            Stores data about each skin state.
            </summary>
            <typeparam name="T">The type of data to store in the struct.</typeparam>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinStates`1.Enabled">
            <summary>
            Data for the skin's Enabled state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinStates`1.Hovered">
            <summary>
            Data for the skin's Hovered state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinStates`1.Pressed">
            <summary>
            Data for the skin's Pressed state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinStates`1.Focused">
            <summary>
            Data for the skin's Focused state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinStates`1.Disabled">
            <summary>
            Data for the skin's Disabled state.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinStates`1.#ctor(`0,`0,`0,`0,`0)">
            <summary>
            Creates a new SkinStates instance.
            </summary>
            <param name="enabled">Data to store for the skin's Enabled state.</param>
            <param name="hovered">Data to store for the skin's Hovered state.</param>
            <param name="pressed">Data to store for the skin's Pressed state.</param>
            <param name="focused">Data to store for the skin's Focused state.</param>
            <param name="disabled">Data to store for the skin's Disabled state.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.LayerStates">
            <summary>
            Stores data about a skin Layer's state.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.LayerStates.Index">
            <summary>
            Index of the layer state's image asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.LayerStates.Color">
            <summary>
            Color tint to apply to the layer state's image asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.LayerStates.Overlay">
            <summary>
            Indicates if the layer state's image asset is to be applied as an overlay or not.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.LayerOverlays">
            <summary>
            Stores data about a skin layer overlay.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.LayerOverlays.Index">
            <summary>
            Index of the image overlay asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.LayerOverlays.Color">
            <summary>
            Color tint to apply to the image overlay asset.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinInfo">
            <summary>
            Stores skin metadata.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinInfo.Name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinInfo.Description">
            <summary>
            Description of the skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinInfo.Author">
            <summary>
            Person who made the skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinInfo.Version">
            <summary>
            Version of the skin. (Should be 0.7 for this version of Neoforce.)
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinList`1">
            <summary>
            Defines a list of Skins, accessible by name.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinList`1.#ctor">
            <summary>
            Creates a default instance of the SkinList class.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinList`1.#ctor(TomShane.Neoforce.Controls.SkinList{`0})">
            <summary>
            Copy constructor.
            </summary>
            <param name="source">Skin list to copy.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SkinList`1.Item(System.String)">
            <summary>
            Accesses a skin in the list by name.
            </summary>
            <param name="index">Name of the skin to access.</param>
            <returns>Returns the skin with the specified name or a 
            default skin if the specified name is not found.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinBase">
            <summary>
            Base class for all things skin related.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinBase.Name">
            <summary>
            Name of the skin control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinBase.Archive">
            <summary>
            Indicates if the object is located in a skin file archive. ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinBase.#ctor">
            <summary>
            Creates a new SkinBase object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinBase.#ctor(TomShane.Neoforce.Controls.SkinBase)">
            <summary>
            Copy constructor for the SkinBase.
            </summary>
            <param name="source">SkinBase object to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinLayer">
            <summary>
            Represents a single layer of a skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Image">
            <summary>
            Image resource for the skin layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Width">
            <summary>
            Width of the skin layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Height">
            <summary>
            Height of the skin layer.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.OffsetX">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.OffsetY">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Alignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.SizingMargins">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.ContentMargins">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.States">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Overlays">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinLayer.Attributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinLayer.#ctor">
            <summary>
            Creates a new skin layer.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinLayer.#ctor(TomShane.Neoforce.Controls.SkinLayer)">
            <summary>
            Creates a new copy of an existing skin layer.
            </summary>
            <param name="source">SkinLayer to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinText">
            <summary>
            Represents a text object of a skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinText.Font">
            <summary>
            Font object used for drawing the text.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinText.OffsetX">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinText.OffsetY">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinText.Alignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinText.Colors">
            <summary>
            Text color for each skin state.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinText.#ctor">
            <summary>
            Creates a new SkinText object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinText.#ctor(TomShane.Neoforce.Controls.SkinText)">
            <summary>
            Creates a new copy of an existing SkinText object.
            </summary>
            <param name="source">SkinText object to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinFont">
            <summary>
            Represents a font object of a skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinFont.Resource">
            <summary>
            Sprite font used for drawing text.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinFont.Asset">
            <summary>
            The sprite font asset file.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinFont.Addon">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinFont.#ctor">
            <summary>
            Creates a new SkinFont object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinFont.#ctor(TomShane.Neoforce.Controls.SkinFont)">
            <summary>
            Creates a new copy of an existing SkinFont object.
            </summary>
            <param name="source">SkinFont to copy.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.SkinFont.Height">
            <summary>
            Returns the height of a line of text.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinImage">
            <summary>
            Represents an image of a skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinImage.Resource">
            <summary>
            Image resource.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinImage.Asset">
            <summary>
            Name of the image asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinImage.Addon">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinImage.#ctor">
            <summary>
            Creates a new SkinImage object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinImage.#ctor(TomShane.Neoforce.Controls.SkinImage)">
            <summary>
            Creates a copy of an existing SkinImage object.
            </summary>
            <param name="source">SkinImage to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinCursor">
            <summary>
            Represents a cursor that is part of a skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinCursor.Resource">
            <summary>
            Cursor image for Windows.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinCursor.Asset">
            <summary>
            Name of the cursor image asset.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinCursor.Addon">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinCursor.#ctor">
            <summary>
            Creates a new SkinCursor object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinCursor.#ctor(TomShane.Neoforce.Controls.SkinCursor)">
            <summary>
            Creates a copy of an existing SkinCursor object.
            </summary>
            <param name="source">SkinCursor object to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinControl">
            <summary>
            Defines the look of a skinned control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.Inherits">
            <summary>
            Indicates which, if any, base skin control settings are inherited by this skin control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.DefaultSize">
            <summary>
            Default size of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.ResizerSize">
            <summary>
            Default size of the resize border around the edge of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.MinimumSize">
            <summary>
            Minimum size settings for this control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.OriginMargins">
            <summary>
            Outer margin values for the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.ClientMargins">
            <summary>
            Inner margin values for the control
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.Layers">
            <summary>
            List of skin control layers. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinControl.Attributes">
            <summary>
            List of skin control attributes.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinControl.#ctor">
            <summary>
            Creates a new SkinControl object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinControl.#ctor(TomShane.Neoforce.Controls.SkinControl)">
            <summary>
            Creates a copy of an existing SkinControl object.
            </summary>
            <param name="source">SkinControl object to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.SkinAttribute">
            <summary>
            Defines an attribute of a skinned control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.SkinAttribute.Value">
            <summary>
            Value of the skin attribute.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinAttribute.#ctor">
            <summary>
            Creates a new SkinAttribute object.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.SkinAttribute.#ctor(TomShane.Neoforce.Controls.SkinAttribute)">
            <summary>
            Creates a copy of an existing SkinAttribute.
            </summary>
            <param name="source">SkinAttribute to copy.</param>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Skin">
            <summary>
            Defines the look and attributes of various controls.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.doc">
            <summary>
            Skin XML document where the skin info is defined.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.name">
            <summary>
            Name of the skin.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.version">
            <summary>
            Skin file version.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.info">
            <summary>
            Skin metadata information.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.controls">
            <summary>
            List of controls the skin supports.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.fonts">
            <summary>
            List of fonts the skin uses.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.cursors">
            <summary>
            List of cursors the skin uses.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.images">
            <summary>
            List of images the skin uses.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.attributes">
            <summary>
            List of attributes the skin uses.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Skin.content">
            <summary>
            Content manager for loading skin files.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.#ctor(TomShane.Neoforce.Controls.Manager,System.String)">
            <summary>
            Creates a new Skin object.
            </summary>
            <param name="manager">GUI manager for the skin.</param>
            <param name="name">Name of the skin file to load.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.Dispose(System.Boolean)">
            <summary>
            Releases the skin's resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.GetArchiveLocation(System.String)">
            <summary>
            Returns the path to the specified skin file.
            </summary>
            <param name="name">Name of the skin file archive.</param>
            <returns>Returns true if the file exists in the skin directory; false otherwise.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.GetFolder">
            <summary>
            Gets the full path to the skin folder.
            </summary>
            <returns>Returns the full path to the skin directory.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.GetAddonsFolder">
            <summary>
            Gets the full path to the skin's addon folder.
            </summary>
            <returns>Returns the full path to the skin's addon folder.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.GetFolder(System.String)">
            <summary>
            
            </summary>
            <param name="type">Type of skin asset to get. ("Fonts", "Cursors", or "Images")</param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.GetAsset(System.String,System.String,System.String)">
            <summary>
            Gets the path to the specified asset.
            </summary>
            <param name="type">Type of skin asset to get. ("Fonts", "Cursors", or "Images")</param>
            <param name="asset">Name of the skin asset to get.</param>
            <param name="addon">Addon directory if asset if part of an addon. </param>
            <returns>Returns the path to the specified asset.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.Init">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttribute(System.Xml.XmlElement,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttribute(System.String@,System.Boolean,System.Xml.XmlElement,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="retval"></param>
            <param name="inherited"></param>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeInt(System.Xml.XmlElement,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeInt(System.Int32@,System.Boolean,System.Xml.XmlElement,System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="retval"></param>
            <param name="inherited"></param>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeBool(System.Xml.XmlElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeBool(System.Boolean@,System.Boolean,System.Xml.XmlElement,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="retval"></param>
            <param name="inherited"></param>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeByte(System.Xml.XmlElement,System.String,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeByte(System.Byte@,System.Boolean,System.Xml.XmlElement,System.String,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="retval"></param>
            <param name="inherited"></param>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ColorToString(Microsoft.Xna.Framework.Color)">
            <summary>
            
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.ReadAttributeColor(Microsoft.Xna.Framework.Color@,System.Boolean,System.Xml.XmlElement,System.String,Microsoft.Xna.Framework.Color,System.Boolean)">
            <summary>
            
            </summary>
            <param name="retval"></param>
            <param name="inherited"></param>
            <param name="element"></param>
            <param name="attrib"></param>
            <param name="defval"></param>
            <param name="needed"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadSkin(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="addon"></param>
            <param name="archive"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadSkinAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadControls">
            <summary>
            
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadFonts(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="addon"></param>
            <param name="archive"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadCursors(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="addon"></param>
            <param name="archive"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadImages(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="addon"></param>
            <param name="archive"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadLayers(TomShane.Neoforce.Controls.SkinControl,System.Xml.XmlNodeList)">
            <summary>
            
            </summary>
            <param name="sc"></param>
            <param name="l"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadColors(System.Boolean,System.Xml.XmlElement,TomShane.Neoforce.Controls.SkinStates{Microsoft.Xna.Framework.Color}@)">
            <summary>
            
            </summary>
            <param name="inherited"></param>
            <param name="e"></param>
            <param name="colors"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadControlAttributes(TomShane.Neoforce.Controls.SkinControl,System.Xml.XmlNodeList)">
            <summary>
            
            </summary>
            <param name="sc"></param>
            <param name="l"></param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Skin.LoadLayerAttributes(TomShane.Neoforce.Controls.SkinLayer,System.Xml.XmlNodeList)">
            <summary>
            
            </summary>
            <param name="sl"></param>
            <param name="l"></param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Name">
            <summary>
            Gets the name of the skin.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Version">
            <summary>
            Gets the skin file version.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Info">
            <summary>
            Gets the skin's metadata info.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Controls">
            <summary>
            Gets the list of controls supported by this skin.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Fonts">
            <summary>
            Gets the list of fonts this skin uses.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Cursors">
            <summary>
            Gets the list of cursors this skin uses.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Images">
            <summary>
            Gets the list of images belonging to this skin.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Skin.Attributes">
            <summary>
            Gets the list of attributes belonging to this skin.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Message">
            <summary>
            Enumerates GUI control events.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ControlState">
            <summary>
            Enumerates GUI control states.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ControlState.Enabled">
            <summary>
            The control is enabled.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ControlState.Hovered">
            <summary>
            Mouse cursor is directly over the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ControlState.Pressed">
            <summary>
            The control is pressed down. 
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ControlState.Focused">
            <summary>
            The control has input focus.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ControlState.Disabled">
            <summary>
            The control is disabled and cannot be used.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Alignment">
            <summary>
            Describes how control content is aligned within the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.None">
            <summary>
            No alignment. Defaults to TopLeft?
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.TopLeft">
            <summary>
            Content is left-aligned at the top of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.TopCenter">
            <summary>
            Content is centered at the top of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.TopRight">
            <summary>
            Content is right-aligned at the top of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.MiddleLeft">
            <summary>
            Content is left-aligned in the center of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.MiddleCenter">
            <summary>
            Content is centered in the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.MiddleRight">
            <summary>
            Content is right-aligned in the center of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.BottomLeft">
            <summary>
            Content is left-aligned at the bottom of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.BottomCenter">
            <summary>
            Content is centered at the bottom of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Alignment.BottomRight">
            <summary>
            Content is right-aligned at the bottom of the control.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ModalResult">
            <summary>
            Indicates which dialog button was pressed. 
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Orientation">
            <summary>
            Indicates the orientation of stack panels and scroll bars.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ScrollBars">
            <summary>
            Indicates which scroll bars are present in a text box.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Anchors">
            <summary>
            Describes how a control is anchored within its parent container.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Margins">
            <summary>
            Describes a control's margins.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Margins.Left">
            <summary>
            Left side margin value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Margins.Top">
            <summary>
            Top side margin value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Margins.Right">
            <summary>
            Right side margin value.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Margins.Bottom">
            <summary>
            Bottom side margin value.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a Margins object with the specified values.
            </summary>
            <param name="left">Left side margin amount.</param>
            <param name="top">Top side margin amount.</param>
            <param name="right">Right side margin amount.</param>
            <param name="bottom">Bottom side margin amount.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Margins.Vertical">
            <summary>
            Gets the total vertical margin amount.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Margins.Horizontal">
            <summary>
            Gets the total horizontal margin amount.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Size">
            <summary>
            Describes the size of a control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Size.Width">
            <summary>
            Width of the control.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.Size.Height">
            <summary>
            Height of the control.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new Size object with the specified dimensions.
            </summary>
            <param name="width">Width of the object.</param>
            <param name="height">Height of the object.</param>
        </member>
        <member name="P:TomShane.Neoforce.Controls.Size.Zero">
            <summary>
            Returns a Size object with null dimensions.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.Utilities">
            <summary>
            Defines a few additional helper methods.
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Utilities.DeriveControlName(TomShane.Neoforce.Controls.Control)">
            <summary>
            Attempts to return the name of a control.
            </summary>
            <param name="control">Control to get the name of.</param>
            <returns>Returns the unqualified name of the specified control.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Utilities.ParseColor(System.String)">
            <summary>
            Parses a color value defined in XML. 
            </summary>
            <param name="str">";" delimited string of RGBA values.</param>
            <returns>Returns the string converted to a Color object.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.Utilities.ParseBevelStyle(System.String)">
            <summary>
            Parses a BevelStyle enumeration defined in XML.
            </summary>
            <param name="str">Name of the bevel style value.</param>
            <returns>Returns the string converted to a BevelStyle object.</returns>
        </member>
        <member name="T:TomShane.Neoforce.Controls.WindowGamePadActions">
            <summary>
            Maps gamepad buttons to window actions.
            </summary>
        </member>
        <member name="T:TomShane.Neoforce.Controls.ArchiveManager">
            <summary>
            Loads managed objects from the binary files produced by the design time 
            content pipeline the same way like <see cref="T:Microsoft.Xna.Framework.Content.ContentManager"/> does. 
            Additionally it is capable of loading assets from a zip file.
            </summary>
            <remarks>
            This class is based on Nick Gravelyn's EasyZip library.
            </remarks> 
        </member>
        <member name="F:TomShane.Neoforce.Controls.ArchiveManager.archivePath">
            <summary>
            Path to the archive file associated with the archive manager.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ArchiveManager.archive">
            <summary>
            Archive file associated with the archive manager.
            </summary>
        </member>
        <member name="F:TomShane.Neoforce.Controls.ArchiveManager.useArchive">
            <summary>
            Indicates if an archive file was specified to read from or not. ???
            </summary>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new instance of the archive manager class using the specified service provider.
            </summary>
            <param name="serviceProvider">Service provider used to locate services</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.#ctor(System.IServiceProvider,System.String)">
            <summary>
            Creates a new instance of the archive manager class using the specified service provider.
            </summary>
            <param name="serviceProvider">Service provider used to locate serives.</param>
            <param name="archive">Path to the zipped skin file which will be used for reading 
            assets from. If this value is null, the archive manager works just like a ContentManager.</param>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.OpenStream(System.String)">
            <summary>
            Opens a stream for reading the specified asset contained inside the archive.
            </summary>
            <param name="assetName">Name of the asset to read.</param>
            <returns>Returns the opened stream.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.GetAssetNames">
            <summary>
            Gets the list of all assets contained inside of the archive.
            </summary>
            <returns>Returns an array of asset names contained in the archive. 
            (Full Path + Asset Name)</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.GetAssetNames(System.String)">
            <summary>
            Gets the list of all assets contained inside the archive in the specified directory.
            </summary>
            <param name="path">Directory in the archive to retrieve asset names from.</param>
            <returns>Returns an array of asset names contained in the specified directory.
            (Full Path + Asset Name)</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.GetFileStream(System.String)">
            <summary>
            Opens a stream for reading the specified file from the archive.
            </summary>
            <param name="filename">Name of the file to read.</param>
            <returns>Returns the opened stream.</returns>
        </member>
        <member name="M:TomShane.Neoforce.Controls.ArchiveManager.GetDirectories(System.String)">
            <summary>
            Gets the list of all directories contained in the archive.
            </summary>
            <param name="path">Directory to start searching from in the archive.</param>
            <returns>Returns an array of all directories under the specified path.</returns>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ArchiveManager.ArchivePath">
            <summary>
            Gets the path to the archive file associated with the manager.
            </summary>
        </member>
        <member name="P:TomShane.Neoforce.Controls.ArchiveManager.UseArchive">
            <summary>
            Indicates if an archive file was specified to read from or not. ???
            </summary>
        </member>
    </members>
</doc>
